{
  "manifest": {
    "name": "karma-source-map-support",
    "version": "1.0.0",
    "description": "Karma plugin for inline sourcemap support",
    "main": "lib/index.js",
    "dependencies": {
      "source-map-support": "^0.2.8"
    },
    "homepage": "https://github.com/tschaub/karma-source-map-support",
    "author": {
      "name": "Tim Schaub",
      "url": "http://tschaub.net/"
    },
    "keywords": [
      "karma-plugin",
      "karma-framework",
      "browserify",
      "inline",
      "sourcemap"
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/tschaub/karma-source-map-support.git"
    },
    "bugs": {
      "url": "https://github.com/tschaub/karma-source-map-support/issues"
    },
    "licenses": [
      {
        "type": "MIT",
        "url": "http://tschaub.mit-license.org/"
      }
    ],
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-karma-source-map-support-1.0.0-58406966120682703f42f085f63901c08d581142\\node_modules\\karma-source-map-support\\package.json",
    "readmeFilename": "readme.md",
    "readme": "# karma-source-map-support\n\nKarma plugin for inline sourcemap support.\n\n## Motivation\n\nWhen loading Browserify bundles with inline source maps (via [`karma-browserify`](https://www.npmjs.com/package/karma-browserify)), the stack traces in Chrome don't mention the original modules.  This plugin uses [`source-map-support`](https://www.npmjs.com/package/source-map-support) to improve the situation.\n\n## Use\n\nInstall the plugin with `npm`:\n\n    npm install karma-source-map-support\n\nConfigure Karma to load the plugin as a framework:\n\n```js\nmodule.exports = function(config) {\n  config.set({\n    frameworks: ['source-map-support']\n    // additional settings here ...\n  });\n};\n```\n\n## Example\n\nThe config settings below are a complete example using Mocha and Browserify with source map support:\n\n```js\nmodule.exports = function(config) {\n  config.set({\n    frameworks: ['browserify', 'source-map-support', 'mocha'],\n    files: [\n      'src/**/*.test.js'\n    ],\n    preprocessors: {\n      'src/**/*.test.js': ['browserify']\n    },\n    browsers: ['PhantomJS'],\n    singleRun: false,\n    browserify: {\n      debug: true // include inline source maps\n    }\n  });\n};\n```\n\nSample stack trace without this plugin:\n```\nAssertionError: case 2: expected [ 0, 0.6666666666666666 ] to deeply equal [ 0, 0.5 ]\n    at Function.assert.deepEqual (http://localhost:9876/absolute/var/folders/6m/3grlt52x7w3047wy0n6j7dr00000gn/T/2d4c510ad9122153a42db199d1cc8e9553208184.browserify:1848:32)\n    at Context.<anonymous> (http://localhost:9876/absolute/var/folders/6m/3grlt52x7w3047wy0n6j7dr00000gn/T/2d4c510ad9122153a42db199d1cc8e9553208184.browserify:6061:14)\n    at callFn (http://localhost:9876/base/node_modules/mocha/mocha.js:4496:21)\n    at Test.Runnable.run (http://localhost:9876/base/node_modules/mocha/mocha.js:4489:7)\n    at Runner.runTest (http://localhost:9876/base/node_modules/mocha/mocha.js:4892:10)\n    at http://localhost:9876/base/node_modules/mocha/mocha.js:4970:12\n    at next (http://localhost:9876/base/node_modules/mocha/mocha.js:4817:14)\n    at http://localhost:9876/base/node_modules/mocha/mocha.js:4827:7\n    at next (http://localhost:9876/base/node_modules/mocha/mocha.js:4766:23)\n    at http://localhost:9876/base/node_modules/mocha/mocha.js:4794:5\n```\n\n\nSample stack trace with this plugin:\n```\nAssertionError: case 2: expected [ 0, 0.6666666666666666 ] to deeply equal [ 0, 0.5 ]\n    at Function.assert.deepEqual (node_modules/chai/lib/chai/interface/assert.js:205:1)\n    at Context.<anonymous> (src/scenes/util/geom.test.js:27:1)\n    at callFn (http://localhost:9876/base/node_modules/mocha/mocha.js:4496:21)\n    at Test.Runnable.run (http://localhost:9876/base/node_modules/mocha/mocha.js:4489:7)\n    at Runner.runTest (http://localhost:9876/base/node_modules/mocha/mocha.js:4892:10)\n    at http://localhost:9876/base/node_modules/mocha/mocha.js:4970:12\n    at next (http://localhost:9876/base/node_modules/mocha/mocha.js:4817:14)\n    at http://localhost:9876/base/node_modules/mocha/mocha.js:4827:7\n    at next (http://localhost:9876/base/node_modules/mocha/mocha.js:4766:23)\n    at http://localhost:9876/base/node_modules/mocha/mocha.js:4794:5\n```\n",
    "license": "MIT"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/karma-source-map-support/-/karma-source-map-support-1.0.0.tgz#58406966120682703f42f085f63901c08d581142",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/karma-source-map-support/-/karma-source-map-support-1.0.0.tgz",
    "hash": "58406966120682703f42f085f63901c08d581142",
    "integrity": "sha1-WEBpZhIGgnA/QvCF9jkBwI1YEUI=",
    "registry": "npm",
    "packageName": "karma-source-map-support"
  },
  "registry": "npm",
  "hash": "58406966120682703f42f085f63901c08d581142"
}