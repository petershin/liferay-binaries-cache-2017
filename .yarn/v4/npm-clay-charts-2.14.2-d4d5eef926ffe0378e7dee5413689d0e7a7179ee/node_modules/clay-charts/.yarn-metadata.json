{
  "manifest": {
    "name": "clay-charts",
    "version": "2.14.2",
    "description": "Metal.js wrapper for D3 and billboard.js",
    "license": "BSD-3-Clause",
    "repository": {
      "type": "git",
      "url": "https://github.com/liferay/clay/tree/master/packages/clay-charts"
    },
    "engines": {
      "node": ">=0.12.0",
      "npm": ">=3.0.0"
    },
    "main": "lib/charts.js",
    "jsnext:main": "src/charts.js",
    "files": [
      "lib",
      "src",
      "test"
    ],
    "scripts": {
      "build": "npm run soy && webpack && ncp ./node_modules/clay-charts-shared/lib/css build",
      "compile": "babel -d lib/ src/ -s --ignore src/__tests__",
      "copyAssets": "ncp ./node_modules/clay-charts-shared/lib/svg lib/svg && ncp ./node_modules/clay-charts-shared/lib/css lib/css",
      "link": "yarn link",
      "prepublish": "npm run soy && npm run compile && npm run copyAssets",
      "soy": "metalsoy --soyDeps node_modules/metal*/src/**/*.soy node_modules/clay*/src/**/*.soy"
    },
    "keywords": [
      "metal"
    ],
    "babel": {
      "presets": [
        "metal-jsx",
        "es2015"
      ]
    },
    "dependencies": {
      "billboard.js": "1.5.1",
      "clay-charts-shared": "^2.14.2",
      "d3": "5.0.0",
      "metal": "^2.16.2",
      "metal-component": "^2.13.2",
      "metal-jsx": "^2.13.2",
      "metal-soy": "^2.16.0",
      "metal-state": "^2.16.0"
    },
    "devDependencies": {
      "babel-cli": "^6.24.1",
      "babel-core": "^6.25.0",
      "babel-loader": "^7.0.0",
      "babel-plugin-transform-node-env-inline": "^0.1.1",
      "babel-preset-env": "^1.6.0",
      "babel-preset-metal": "^4.0.0",
      "babel-preset-metal-jsx": "^0.1.1",
      "browserslist-config-clay": "^2.14.2",
      "clay-css": "^2.14.2",
      "metal-tools-soy": "^4.3.2",
      "ncp": "^2.0.0",
      "webpack": "^3.0.0",
      "webpack-config-clay": "^2.14.2"
    },
    "browserslist": [
      "extends browserslist-config-clay"
    ],
    "gitHead": "d52066086b2469d8c4e4976c7019dbe9cfcbc7ea",
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-clay-charts-2.14.2-d4d5eef926ffe0378e7dee5413689d0e7a7179ee\\node_modules\\clay-charts\\package.json",
    "readmeFilename": "README.md",
    "readme": "# clay-charts\n\nMetal.js wrapper for D3 and billboard.js\n\n## Setup\n\n1. Install NodeJS >= v0.12.0 and NPM >= v3.0.0, if you don't have it yet. You\ncan find it [here](https://nodejs.org).\n\n2. Install local dependencies:\n\n  ```\n  npm install\n  ```\n\n3. Build the code:\n\n  ```\n  npm run build\n  ```\n\n## How to\n\n### Chart types:\n\nclay-charts supports the following (billboard.js) charts:\n\n+ LineChart\n+ SplineChart\n+ StepChart\n+ AreaChart\n+ AreaLineChart\n+ AreaStepChart\n+ BarChart\n+ ScatterChart\n+ PieChart\n+ DonutChart\n+ GaugeChart\n\n### Creating a chart\n\nTo create a chart, you will need to instantiate the type of\nchart you want to use, passing in the required options:\n\nFor example, to create a `LineChart` you could use the following code:\n\n```javascript\nconst lineChart = new metal.LineChart({\n  columns: [\n    {\n      data: [30, 200, 100, 400, 150, 250],\n      id: 'sample_data_1',\n      name: 'Data 1',\n    },\n    {\n      data: [50, 20, 10, 40, 15, 25],\n      id: 'data2'\n    },\n    {\n      data: [150, 90, 30, 400, 15, 205],\n      id: 'data3'\n    },\n    {\n      data: [10, 30, 130, 200, 50, 20],\n      id: 'data4'\n    }\n  ]\n});\n```\n\nAs shown above, the only required option is to pass a `columns`\narray, which contains your datasets.\n\nEach item in the `columns` array is an object which contains these fields:\n\n```javascript\n{\n  data: [10, 20, 30, 40, 50], // {!Array} The item's dataset\n  id:   'data1',              // {!String} The item's ID (displayed in the chart's legend and tooltip)\n  name: ''                    // {String} [optional] The item's name (If specified,\n                              // will be displayed instead of the item's ID in the chart's legend and tooltip)\n}\n```\n\nThese options work with all supported chart types.\n\nPlease note that for `DonutChart`, `GaugeChart` and `PieChart` the column's items contain only one value in their `data` property:\n\n```javascript\nconst pieChart = new metal.PieChart({\n  columns: [\n    {\n      data: [30],\n      id: 'data1'\n    },\n    {\n      data: [50],\n      id: 'data2'\n    },\n    {\n      data: [20],\n      id: 'data3'\n    }\n  ]\n});\n```\n### More options\n\nAdditional options can be passed to the different chart constructors; these options will be passed to `billboard.js`.\n\nFor all available chart options, you might want to check `billboard.js`'s available [Options](https://github.com/naver/billboard.js/blob/master/src/config/Options.js)\n\nThese are the options available in clay-charts, some have slightly different names than the ones in `billboard.js`\n\n```javascript\n+ area                      // Only for area type charts\n+ axisRotated\n+ axisX\n+ axisY2\n+ axisY\n+ bar\n+ color\n+ colors\n+ colorFormatter            // Set's billboard.js' data.color config\n+ columns\n+ donut                     // Only for DonutChart\n+ emptyLabelText\n+ gauge                     // Only for GaugeChart\n+ grid\n+ groups                    // Set's billboard.js' data.group config\n+ hide                      // A boolean indicating if the chart should be hidden\n+ intersection\n+ json                      // Set's billboard.js' data.json config\n+ keys                      // Set's billboard.js' data.keys config\n+ labels                    // Set's billboard.js' data.labels config\n+ legend                    // Set's billboard.js' data.labels config\n+ line                      // Only for Line type charts\n+ mimeType                  // Set's billboard.js' data.mimeType config\n+ order                     // Set's billboard.js' data.order config\n+ padding\n+ pie                       // Only for PieChart\n+ point\n+ regions\n+ resizeAuto\n+ rows                       // Set's billboard.js' data.rows config\n+ selection                  // Set's billboard.js' data.selection config\n+ size                       // Set's the chart's size\n+ splineInterpolationType    // For Spline type charts\n+ subchart\n+ svgClassName               // Set's the `svg` element's css class name\n+ title\n+ tooltip\n+ transitionDuration\n+ url\n+ x                          // Set's billboard.js' data.x config\n+ xFormat                    // Set's billboard.js' data.xFormat config\n+ xLocaltime                 // Set's billboard.js' data.xLocaltime config\n+ xSort                      // Set's billboard.js' data.xLocaltime config\n+ zoom\n```\n\nAll these options are commented and visible in [ChartBase.js](src/ChartBase.js).\n\n## Contribute\n\nWe'd love to get contributions from you! Please, check our [Contributing Guidelines](CONTRIBUTING.md) to see how you can help us improve.\n",
    "licenseText": "# Software License Agreement (BSD License)\n\nCopyright (c) 2014, Liferay Inc.\nAll rights reserved.\n\nRedistribution and use of this software in source and binary forms, with or without modification, are\npermitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above\n  copyright notice, this list of conditions and the\n  following disclaimer.\n\n* Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the\n  following disclaimer in the documentation and/or other\n  materials provided with the distribution.\n\n* The name of Liferay Inc. may not be used to endorse or promote products\n  derived from this software without specific prior\n  written permission of Liferay Inc.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED\nWARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\nTORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/clay-charts/-/clay-charts-2.14.2.tgz#d4d5eef926ffe0378e7dee5413689d0e7a7179ee",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/clay-charts/-/clay-charts-2.14.2.tgz",
    "hash": "d4d5eef926ffe0378e7dee5413689d0e7a7179ee",
    "integrity": "sha512-WVTvXwk7yg9NrLU4s/x1Zh9jyPt6aR3Or5IlWWfwQFTWNyWaRXAegK0G+5SdiTWHeldMsACmLxE7BvJz+9PwqA==",
    "registry": "npm",
    "packageName": "clay-charts"
  },
  "registry": "npm",
  "hash": "d4d5eef926ffe0378e7dee5413689d0e7a7179ee"
}