{
  "manifest": {
    "name": "write-file-atomic",
    "version": "1.3.4",
    "description": "Write files in an atomic fashion w/configurable ownership",
    "main": "index.js",
    "scripts": {
      "test": "standard && tap --coverage test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git@github.com:iarna/write-file-atomic.git"
    },
    "keywords": [
      "writeFile",
      "atomic"
    ],
    "author": {
      "name": "Rebecca Turner",
      "email": "me@re-becca.org",
      "url": "http://re-becca.org"
    },
    "license": "ISC",
    "bugs": {
      "url": "https://github.com/iarna/write-file-atomic/issues"
    },
    "homepage": "https://github.com/iarna/write-file-atomic",
    "dependencies": {
      "graceful-fs": "^4.1.11",
      "imurmurhash": "^0.1.4",
      "slide": "^1.1.5"
    },
    "devDependencies": {
      "mkdirp": "^0.5.1",
      "require-inject": "^1.4.0",
      "rimraf": "^2.5.4",
      "standard": "^9.0.2",
      "tap": "^10.3.2"
    },
    "files": [
      "index.js"
    ],
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-write-file-atomic-1.3.4-f807a4f0b1d9e913ae7a48112e6cc3af1991b45f\\node_modules\\write-file-atomic\\package.json",
    "readmeFilename": "README.md",
    "readme": "write-file-atomic\n-----------------\n\nThis is an extension for node's `fs.writeFile` that makes its operation\natomic and allows you set ownership (uid/gid of the file).\n\n### var writeFileAtomic = require('write-file-atomic')<br>writeFileAtomic(filename, data, [options], callback)\n\n* filename **String**\n* data **String** | **Buffer**\n* options **Object**\n  * chown **Object**\n    * uid **Number**\n    * gid **Number**\n  * encoding **String** | **Null** default = 'utf8'\n  * mode **Number** default = 438 (aka 0666 in Octal)\ncallback **Function**\n\nAtomically and asynchronously writes data to a file, replacing the file if it already\nexists.  data can be a string or a buffer.\n\nThe file is initially named `filename + \".\" + murmurhex(__filename, process.pid, ++invocations)`.\nIf writeFile completes successfully then, if passed the **chown** option it will change\nthe ownership of the file. Finally it renames the file back to the filename you specified. If\nit encounters errors at any of these steps it will attempt to unlink the temporary file and then\npass the error back to the caller.\n\nIf provided, the **chown** option requires both **uid** and **gid** properties or else\nyou'll get an error.\n\nThe **encoding** option is ignored if **data** is a buffer. It defaults to 'utf8'.\n\nExample:\n\n```javascript\nwriteFileAtomic('message.txt', 'Hello Node', {chown:{uid:100,gid:50}}, function (err) {\n  if (err) throw err;\n  console.log('It\\'s saved!');\n});\n```\n\n### var writeFileAtomicSync = require('write-file-atomic').sync<br>writeFileAtomicSync(filename, data, [options])\n\nThe synchronous version of **writeFileAtomic**.\n",
    "licenseText": "Copyright (c) 2015, Rebecca Turner\n\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/write-file-atomic/-/write-file-atomic-1.3.4.tgz#f807a4f0b1d9e913ae7a48112e6cc3af1991b45f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/write-file-atomic/-/write-file-atomic-1.3.4.tgz",
    "hash": "f807a4f0b1d9e913ae7a48112e6cc3af1991b45f",
    "integrity": "sha1-+Aek8LHZ6ROuekgRLmzDrxmRtF8=",
    "registry": "npm",
    "packageName": "write-file-atomic"
  },
  "registry": "npm",
  "hash": "f807a4f0b1d9e913ae7a48112e6cc3af1991b45f"
}