{
  "manifest": {
    "name": "babel-plugin-module-resolver",
    "version": "3.1.3",
    "main": "lib/index.js",
    "description": "Module resolver plugin for Babel",
    "repository": {
      "type": "git",
      "url": "https://github.com/tleunen/babel-plugin-module-resolver.git"
    },
    "engines": {
      "node": ">= 6.0.0"
    },
    "files": [
      "lib"
    ],
    "author": {
      "name": "Tommy Leunen",
      "email": "tommy.leunen@gmail.com",
      "url": "http://tommyleunen.com"
    },
    "license": "MIT",
    "keywords": [
      "babel",
      "babel-plugin",
      "module",
      "resolver",
      "alias",
      "rewrite",
      "resolve",
      "rename",
      "mapping",
      "require",
      "import"
    ],
    "dependencies": {
      "find-babel-config": "^1.1.0",
      "glob": "^7.1.2",
      "pkg-up": "^2.0.0",
      "reselect": "^3.0.1",
      "resolve": "^1.4.0"
    },
    "devDependencies": {
      "@babel/cli": "^7.1.0",
      "@babel/core": "^7.1.0",
      "@babel/plugin-syntax-dynamic-import": "^7.0.0",
      "@babel/plugin-transform-modules-commonjs": "^7.1.0",
      "@babel/preset-env": "^7.1.0",
      "babel-core": "^7.0.0-bridge.0",
      "babel-jest": "^23.6.0",
      "common-tags": "^1.4.0",
      "eslint": "^4.19.0",
      "eslint-config-airbnb-base": "^12.1.0",
      "eslint-config-prettier": "^2.9.0",
      "eslint-plugin-import": "^2.9.0",
      "husky": "^0.14.3",
      "jest": "^23.6.0",
      "lint-staged": "^7.0.0",
      "prettier-eslint-cli": "^4.7.1",
      "standard-version": "^4.2.0"
    },
    "scripts": {
      "lint": "eslint src test",
      "compile": "babel src --out-dir lib",
      "pretest": "npm run lint",
      "test": "jest",
      "test:coverage": "jest --coverage",
      "test:watch": "jest --watch",
      "prepublish": "npm run compile",
      "release": "standard-version",
      "precommit": "lint-staged"
    },
    "lint-staged": {
      "*.{js}": [
        "prettier-eslint --write",
        "git add"
      ]
    },
    "jest": {
      "testEnvironment": "node",
      "testRegex": "/test/.*\\.test\\.js$",
      "collectCoverageFrom": [
        "src/**/*.js",
        "!src/log.js"
      ]
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-babel-plugin-module-resolver-3.1.3-5a1c148bf528d20907ed508b70ae3c4762e78c8d\\node_modules\\babel-plugin-module-resolver\\package.json",
    "readmeFilename": "README.md",
    "readme": "# babel-plugin-module-resolver\n[![Maintenance Status][status-image]][status-url] [![NPM version][npm-image]][npm-url] [![Build Status Linux][circleci-image]][circleci-url] [![Build Status Windows][appveyor-image]][appveyor-url] [![Coverage Status][coverage-image]][coverage-url]\n\nA [Babel](http://babeljs.io) plugin to add a new resolver for your modules when compiling your code using Babel. This plugin allows you to add new \"root\" directories that contain your modules. It also allows you to setup a custom alias for directories, specific files, or even other npm modules.\n\n## Description\n\nThis plugin can simplify the require/import paths in your project. For example, instead of using complex relative paths like `../../../../utils/my-utils`, you can write `utils/my-utils`. It will allow you to work faster since you won't need to calculate how many levels of directory you have to go up before accessing the file.\n\n```js\n// Use this:\nimport MyUtilFn from 'utils/MyUtilFn';\n// Instead of that:\nimport MyUtilFn from '../../../../utils/MyUtilFn';\n\n// And it also work with require calls\n// Use this:\nconst MyUtilFn = require('utils/MyUtilFn');\n// Instead of that:\nconst MyUtilFn = require('../../../../utils/MyUtilFn');\n```\n\n## Getting started\n\nInstall the plugin\n\n```\n$ npm install --save-dev babel-plugin-module-resolver\n```\n\nSpecify the plugin in your `.babelrc` with the custom root or alias. Here's an example:\n```json\n{\n  \"plugins\": [\n    [\"module-resolver\", {\n      \"root\": [\"./src\"],\n      \"alias\": {\n        \"test\": \"./test\",\n        \"underscore\": \"lodash\"\n      }\n    }]\n  ]\n}\n```\n\n**.babelrc.js version**\nSpecify the plugin in your `.babelrc.js` file with the custom root or alias. Here's an example:\n```\n\nconst plugins = [\n  [\n    require.resolve('babel-plugin-module-resolver'),\n    {\n      root: [\"./src/\"],\n      alias: {\n        \"test\": \"./test\"\n      }\n    }\n    \n  ]\n\n];\n\n```\nGood example: // https://gist.github.com/nodkz/41e189ff22325a27fe6a5ca81df2cb91\n\n\n## Documentation\n\nbabel-plugin-module-resolver can be configured and controlled easily, check the [documentation](DOCS.md) for more details\n\nAre you a plugin author (e.g. IDE integration)? We have [documented the exposed functions](DOCS.md#for-plugin-authors) for use in your plugins!\n\n## ESLint plugin\n\nIf you're using ESLint, you should use [eslint-plugin-import][eslint-plugin-import], and [eslint-import-resolver-babel-module][eslint-import-resolver-babel-module] to remove falsy unresolved modules. If you want to have warnings when aliased modules are being imported by their relative paths, you can use [eslint-plugin-module-resolver](https://github.com/HeroProtagonist/eslint-plugin-module-resolver). \n\n## Editors autocompletion\n\n- Atom: Uses [atom-autocomplete-modules][atom-autocomplete-modules] and enable the `babel-plugin-module-resolver` option.\n- IntelliJ/WebStorm: You can add custom resources root directories, make sure it matches what you have in this plugin.\n- VS Code: Configure the [path mapping](https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping) in `jsconfig.json` (`tsconfig.json` for TypeScript), e.g.:\n\n```js\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"*\": [\"src/*\"],\n      \"test/*\": [\"test/*\"],\n      \"underscore\": [\"lodash\"]\n    }\n  }\n}\n```\n\n\n## License\n\nMIT, see [LICENSE.md](/LICENSE.md) for details.\n\n## Who is using babel-plugin-module-resolver ?\n\n- Algolia: [InstantSearch.js](https://github.com/algolia/instantsearch.js)\n- Airbnb: [Lottie React Native](https://github.com/airbnb/lottie-react-native)\n- AppDirect\n- Callstack: [React Native Paper](https://github.com/callstack/react-native-paper)\n- Codility\n- Eleme: [Element](https://github.com/ElemeFE/element) \n- Expo: [Expo SDK](https://github.com/expo/expo-sdk)\n- FormidableLabs: [Victory Native](https://github.com/FormidableLabs/victory-native)\n- OpenCollective: [OpenCollective](https://github.com/opencollective/frontend)\n- React Community: [React Native Maps](https://github.com/react-community/react-native-maps)\n- Uber: [Seer](https://github.com/uber-web/Seer), [react-vis](https://github.com/uber/react-vis)\n- Vuetify.js [Vuetify](https://github.com/vuetifyjs/vuetify)\n- Zeit: [Next.js](https://github.com/zeit/next.js)\n- Zenika: [Immutadot](https://github.com/Zenika/immutadot)\n\nAre you also using it? Send a PR!\n\n[status-image]: https://img.shields.io/badge/status-maintained-brightgreen.svg\n[status-url]: https://github.com/tleunen/babel-plugin-module-resolver\n\n[npm-image]: https://img.shields.io/npm/v/babel-plugin-module-resolver.svg\n[npm-url]: https://www.npmjs.com/package/babel-plugin-module-resolver\n\n[circleci-image]: https://img.shields.io/circleci/project/tleunen/babel-plugin-module-resolver/master.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB2aWV3Qm94PSItMTQyLjUgLTE0Mi41IDI4NSAyODUiPjxjaXJjbGUgcj0iMTQxLjciIGZpbGw9IiNERDQ4MTQiLz48ZyBpZD0iYSIgZmlsbD0iI0ZGRiI%2BPGNpcmNsZSBjeD0iLTk2LjQiIHI9IjE4LjkiLz48cGF0aCBkPSJNLTQ1LjYgNjguNGMtMTYuNi0xMS0yOS0yOC0zNC00Ny44IDYtNSA5LjgtMTIuMyA5LjgtMjAuNnMtMy44LTE1LjctOS44LTIwLjZjNS0xOS44IDE3LjQtMzYuNyAzNC00Ny44bDEzLjggMjMuMkMtNDYtMzUuMi01NS4zLTE4LjctNTUuMyAwYzAgMTguNyA5LjMgMzUuMiAyMy41IDQ1LjJ6Ii8%2BPC9nPjx1c2UgeGxpbms6aHJlZj0iI2EiIHRyYW5zZm9ybT0icm90YXRlKDEyMCkiLz48dXNlIHhsaW5rOmhyZWY9IiNhIiB0cmFuc2Zvcm09InJvdGF0ZSgyNDApIi8%2BPC9zdmc%2B\n[circleci-url]: https://circleci.com/gh/tleunen/babel-plugin-module-resolver\n\n[appveyor-image]: https://img.shields.io/appveyor/ci/tleunen/babel-plugin-module-resolver/master.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZlcnNpb249IjEuMSIgd2lkdGg9IjEyOCIgaGVpZ2h0PSIxMjgiIHZpZXdCb3g9IjAgMCAxMjggMTI4Ij48ZyBmaWxsPSIjMUJBMUUyIiB0cmFuc2Zvcm09InNjYWxlKDgpIj48cGF0aCBkPSJNMCAyLjI2NWw2LjUzOS0uODg4LjAwMyA2LjI4OC02LjUzNi4wMzd6Ii8%2BPHBhdGggZD0iTTYuNTM2IDguMzlsLjAwNSA2LjI5My02LjUzNi0uODk2di01LjQ0eiIvPjxwYXRoIGQ9Ik03LjMyOCAxLjI2MWw4LjY3LTEuMjYxdjcuNTg1bC04LjY3LjA2OXoiLz48cGF0aCBkPSJNMTYgOC40NDlsLS4wMDIgNy41NTEtOC42Ny0xLjIyLS4wMTItNi4zNDV6Ii8%2BPC9nPjwvc3ZnPg==\n[appveyor-url]: https://ci.appveyor.com/project/tleunen/babel-plugin-module-resolver\n\n[coverage-image]: https://codecov.io/gh/tleunen/babel-plugin-module-resolver/branch/master/graph/badge.svg\n[coverage-url]: https://codecov.io/gh/tleunen/babel-plugin-module-resolver\n\n[eslint-import-resolver-babel-module]: https://github.com/tleunen/eslint-import-resolver-babel-module\n[eslint-plugin-import]: https://github.com/benmosher/eslint-plugin-import\n[atom-autocomplete-modules]: https://github.com/nkt/atom-autocomplete-modules\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Tommy Leunen <tommy.leunen@gmail.com> (tommyleunen.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/babel-plugin-module-resolver/-/babel-plugin-module-resolver-3.1.3.tgz#5a1c148bf528d20907ed508b70ae3c4762e78c8d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/babel-plugin-module-resolver/-/babel-plugin-module-resolver-3.1.3.tgz",
    "hash": "5a1c148bf528d20907ed508b70ae3c4762e78c8d",
    "integrity": "sha512-QRfA8b2H7l9uSElLwS0rHoPhjPhgpncKUvrn42tJpdCoJ3IS6J+m4mp5FtnRoXHry3ZYJ2SMLLG/REikQA6tjg==",
    "registry": "npm",
    "packageName": "babel-plugin-module-resolver"
  },
  "registry": "npm",
  "hash": "5a1c148bf528d20907ed508b70ae3c4762e78c8d"
}