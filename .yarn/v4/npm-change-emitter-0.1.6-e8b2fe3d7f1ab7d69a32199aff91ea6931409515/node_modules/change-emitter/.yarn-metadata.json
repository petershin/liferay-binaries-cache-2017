{
  "manifest": {
    "name": "change-emitter",
    "version": "0.1.6",
    "description": "Listen for changes. Like an event emitter that only emits a single event type. Really tiny.",
    "main": "lib/index.js",
    "files": [
      "lib"
    ],
    "scripts": {
      "check": "eslint src",
      "build": "babel src --out-dir lib",
      "test": "ava",
      "test:watch": "yarn run test -- --watch",
      "prepublish": "yarn run check && yarn run test && yarn run build"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/acdlite/change-emitter.git"
    },
    "keywords": [
      "change",
      "event",
      "emitter"
    ],
    "author": {
      "name": "Andrew Clark",
      "email": "acdlite@me.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/acdlite/change-emitter/issues"
    },
    "homepage": "https://github.com/acdlite/change-emitter#readme",
    "devDependencies": {
      "ava": "^0.14.0",
      "babel-cli": "^6.8.0",
      "babel-core": "^6.8.0",
      "babel-preset-es2015": "^6.6.0",
      "eslint": "^2.10.1",
      "eslint-config-airbnb-base": "^3.0.1",
      "eslint-plugin-import": "^1.8.0",
      "sinon": "^1.17.4"
    },
    "ava": {
      "babel": "inherit",
      "files": [
        "**/*-test.js"
      ],
      "source": [
        "**/*.js"
      ],
      "require": [
        "babel-register"
      ]
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-change-emitter-0.1.6-e8b2fe3d7f1ab7d69a32199aff91ea6931409515\\node_modules\\change-emitter\\package.json",
    "readmeFilename": "README.md",
    "readme": "change-emitter\n==============\n\n[![build status](https://img.shields.io/travis/acdlite/change-emitter/master.svg?style=flat-square)](https://travis-ci.org/acdlite/change-emitter)\n[![npm version](https://img.shields.io/npm/v/change-emitter.svg?style=flat-square)](https://www.npmjs.com/package/change-emitter)\n\nListen for changes. Like an event emitter that only emits a single event type. Really tiny.\n\nI extracted this from Redux's `createStore()` because I found it to be useful in other contexts. Use it where you want the most minimal event subscription implementation possible.\n\n## Usage\n\n```js\nimport { createChangeEmitter } from 'change-emitter'\n\nconst emitter = createChangeEmitter()\n\n// Called `listen` instead of `subscribe` to avoid confusion with observable spec\nconst unlisten = emitter.listen((...args) => {\n  console.log(args)\n})\n\nemitter.emit(1, 2, 3) // logs `[1, 2, 3]`\nunlisten()\nemitter.emit(4, 5, 6) // doesn't log\n```\n\n## Larger example\n\nHere's a (partial) implementation of Redux's `createStore`:\n\n```js\nconst createStore = (reducer, initialState) => {\n  let state = initialState\n  const emitter = createChangeEmitter()\n\n  function dispatch(action) {\n    state = reducer(state, action)\n    emitter.emit()\n    return action\n  }\n\n  function getState() {\n    return state\n  }\n\n  return {\n    dispatch,\n    getState,\n    subscribe: emitter.listen\n  }\n}\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/change-emitter/-/change-emitter-0.1.6.tgz#e8b2fe3d7f1ab7d69a32199aff91ea6931409515",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/change-emitter/-/change-emitter-0.1.6.tgz",
    "hash": "e8b2fe3d7f1ab7d69a32199aff91ea6931409515",
    "integrity": "sha1-6LL+PX8at9aaMhma/5HqaTFAlRU=",
    "registry": "npm",
    "packageName": "change-emitter"
  },
  "registry": "npm",
  "hash": "e8b2fe3d7f1ab7d69a32199aff91ea6931409515"
}