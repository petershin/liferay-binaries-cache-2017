{
  "manifest": {
    "name": "metal-promise",
    "description": "Promises polyfill from Google's Closure Library in ES6",
    "version": "3.0.5",
    "dependencies": {
      "metal": "^2.16.6"
    },
    "devDependencies": {
      "babel-cli": "^6.26.0",
      "babel-jest": "^21.2.0",
      "babel-preset-env": "^1.7.0",
      "babel-preset-metal": "^4.0.0",
      "jest": "^21.2.1"
    },
    "engines": {
      "node": ">=0.12.0",
      "npm": ">=3.0.0"
    },
    "files": [
      "lib",
      "src",
      "test"
    ],
    "jsnext:main": "src/all.js",
    "keywords": [
      "metal",
      "promise"
    ],
    "license": "BSD",
    "main": "lib/all.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/metal/metal-plugins/tree/master/packages/metal-promise"
    },
    "scripts": {
      "compile": "babel -d lib/ src/",
      "prepublish": "npm run compile",
      "test": "jest",
      "test:jest": "npm run test"
    },
    "gitHead": "282bfcb63137ce4b9982f91a7a10a7eb8f2ab15a",
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-metal-promise-3.0.5-03d8fb40579e5b97a4e44356e00042f2d34844de\\node_modules\\metal-promise\\package.json",
    "readmeFilename": "README.md",
    "readme": "# metal-promise\n\n[![Build Status](https://travis-ci.org/metal/metal-promise.svg?branch=master)](https://travis-ci.org/metal/metal-promise)\n\n```\n/*!\n * Promises polyfill from Google's Closure Library in ES6.\n *\n *      Copyright 2013 The Closure Library Authors. All Rights Reserved.\n *\n * Promise support is not ready on all supported browsers,\n * therefore core.js is temporarily using Google's promises as polyfill. It\n * supports cancellable promises and has clean and fast implementation.\n */\n ```\n\n## Use\n\n### Simple use case\n\n```javascript\nimport CancellablePromise from 'metal-promise';\n\nnew CancellablePromise(function(resolve, reject) {\n  asyncFunction(function(err) {\n    if (err) {\n      reject(err);\n    }\n    else {\n      resolve();\n    }\n  });\n})\n.then(function() {\n  // Invoked once resolved\n})\n.catch(function(err) {\n  // Invoked once rejected\n});\n```\n\n### Progress tracking\n\nIn addition to Google Closure's implementation of Promise,\nthe `ProgressPromise` class is also provided for tracking the progress of an\nasync process.\n\n```javascript\nimport {ProgressPromise} from 'metal-promise';\n\nnew ProgressPromise(function(resolve, reject, progress) {\n  progress(0.3);\n  progress(0.5);\n  progress(0.7);\n  progress(0.9);\n\n  setTimeout(function() {\n    resolve();\n  }, 100);\n})\n.progress(progress => {\n  // Will invoke 4 times, 0.3, 0.5, 0.7, 0.9\n})\n.then(function() {\n  // Invoked after all progress calls\n});\n```\n\nNote that the `progress` function must be invoked with a number\nbetween `0` and `1`.\n\n```javascript\nprogress(2); // TypeError: The progress percentage should be a number between 0 and 1\n```\n\nIt also cannot be invoked with a smaller number than the previous call.\n\n```javascript\nprogress(0.3);\nprogress(0.1); // Error: The progress percentage can't be lower than the previous percentage\n```\n\n### Advanced use cases\n\nTo see more advanced documentation, please visit Google Closure\nLibrary's [documentation](https://google.github.io/closure-library/api/goog.Promise.html);\n\n## Setup\n\n1. Install a recent release of [NodeJS](https://nodejs.org/en/download/) if you\ndon't have it yet.\n\n2. Install local dependencies:\n\n  ```\n  npm install\n  ```\n\n3. Run the tests:\n\n  ```\n  npm test\n  ```\n\n## Contributing\n\nCheck out the [contributing guidelines](https://github.com/metal/metal-plugins/blob/master/CONTRIBUTING.md) for more information.\n",
    "licenseText": "# Software License Agreement (BSD License)\n\nCopyright (c) 2017, Liferay Inc.\nAll rights reserved.\n\nRedistribution and use of this software in source and binary forms, with or without modification, are\npermitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above\n  copyright notice, this list of conditions and the\n  following disclaimer.\n\n* Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the\n  following disclaimer in the documentation and/or other\n  materials provided with the distribution.\n\n* The name of Liferay Inc. may not be used to endorse or promote products\n  derived from this software without specific prior\n  written permission of Liferay Inc.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED\nWARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\nTORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/metal-promise/-/metal-promise-3.0.5.tgz#03d8fb40579e5b97a4e44356e00042f2d34844de",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/metal-promise/-/metal-promise-3.0.5.tgz",
    "hash": "03d8fb40579e5b97a4e44356e00042f2d34844de",
    "integrity": "sha512-9LRn5oPcv439xCiNvmKBWVopFBaJ5zBV75lkZMydufJX17YJ8J6+EVrL2ctlrxxxyF/hFhiEGVGPvxNjY9kwxg==",
    "registry": "npm",
    "packageName": "metal-promise"
  },
  "registry": "npm",
  "hash": "03d8fb40579e5b97a4e44356e00042f2d34844de"
}