{
  "manifest": {
    "name": "unist-util-is",
    "version": "2.1.2",
    "description": "Utility to check if a node passes a test",
    "license": "MIT",
    "keywords": [
      "unist",
      "node",
      "is",
      "equal",
      "test",
      "type",
      "util",
      "utility"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/syntax-tree/unist-util-is.git"
    },
    "bugs": {
      "url": "https://github.com/syntax-tree/hast-util-to-html/issues"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "http://wooorm.com"
      }
    ],
    "files": [
      "index.js"
    ],
    "dependencies": {},
    "devDependencies": {
      "browserify": "^16.0.0",
      "esmangle": "^1.0.1",
      "nyc": "^11.0.0",
      "prettier": "^1.12.1",
      "remark-cli": "^5.0.0",
      "remark-preset-wooorm": "^4.0.0",
      "tape": "^4.0.0",
      "xo": "^0.20.0"
    },
    "scripts": {
      "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix",
      "build-bundle": "browserify index.js --bare -s unistUtilIs > unist-util-is.js",
      "build-mangle": "esmangle < unist-util-is.js > unist-util-is.min.js",
      "build": "npm run build-bundle && npm run build-mangle",
      "test-api": "node test",
      "test-coverage": "nyc --reporter lcov tape test.js",
      "test": "npm run format && npm run build && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "esnext": false,
      "rules": {
        "guard-for-in": "off",
        "no-var": "off",
        "prefer-arrow-callback": "off",
        "unicorn/prefer-type-error": "off"
      },
      "ignore": [
        "unist-util-is.js"
      ]
    },
    "nyc": {
      "check-coverage": true,
      "lines": 100,
      "functions": 100,
      "branches": 100
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-unist-util-is-2.1.2-1193fa8f2bfbbb82150633f3a8d2eb9a1c1d55db\\node_modules\\unist-util-is\\package.json",
    "readmeFilename": "readme.md",
    "readme": "# unist-util-is [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\n[**Unist**][unist] utility to check if a node passes a test.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install unist-util-is\n```\n\n## Usage\n\n```js\nvar is = require('unist-util-is')\n\nvar node = {type: 'strong'}\nvar parent = {type: 'paragraph', children: [node]}\n\nfunction test(node, n) {\n  return n === 5\n}\n\nis() // => false\nis(null, {children: []}) // => false\nis(null, node) // => true\nis('strong', node) // => true\nis('emphasis', node) // => false\n\nis(node, node) // => true\nis({type: 'paragraph'}, parent) // => true\nis({type: 'strong'}, parent) // => false\n\nis(test, node) // => false\nis(test, node, 4, parent) // => false\nis(test, node, 5, parent) // => true\n```\n\n## API\n\n### `is(test, node[, index, parent[, context]])`\n\n###### Parameters\n\n*   `test` ([`Function`][test], `string`, `Object`, or `Array.<Test>`, optional)\n    —  When not given, checks if `node` is a [`Node`][node].\n    When `string`, works like passing `function (node) {return\n    node.type === test}`.\n    When `array`, checks any one of the subtests pass.\n    When `object`, checks that all keys in `test` are in `node`,\n    and that they have (strictly) equal values\n*   `node` ([`Node`][node]) — Node to check.  `false` is returned\n*   `index` (`number`, optional) — Position of `node` in `parent`\n*   `parent` (`Node`, optional) — Parent of `node`\n*   `context` (`*`, optional) — Context object to invoke `test` with\n\n###### Returns\n\n`boolean` — Whether `test` passed _and_ `node` is a [`Node`][node] (object\nwith `type` set to non-empty `string`).\n\n#### `function test(node[, index, parent])`\n\n###### Parameters\n\n*   `node` (`Node`) — Node to test\n*   `index` (`number?`) — Position of `node` in `parent`\n*   `parent` (`Node?`) — Parent of `node`\n\n###### Context\n\n`*` — The to `is` given `context`.\n\n###### Returns\n\n`boolean?` — Whether `node` matches.\n\n## Related\n\n*   [`unist-util-find-after`](https://github.com/syntax-tree/unist-util-find-after)\n    — Find a node after another node\n*   [`unist-util-find-before`](https://github.com/syntax-tree/unist-util-find-before)\n    — Find a node before another node\n*   [`unist-util-find-all-after`](https://github.com/syntax-tree/unist-util-find-all-after)\n    — Find all nodes after another node\n*   [`unist-util-find-all-before`](https://github.com/syntax-tree/unist-util-find-all-before)\n    — Find all nodes before another node\n*   [`unist-util-find-all-between`](https://github.com/mrzmmr/unist-util-find-all-between)\n    — Find all nodes between two nodes\n*   [`unist-util-find`](https://github.com/blahah/unist-util-find)\n    — Find nodes matching a predicate\n*   [`unist-util-filter`](https://github.com/eush77/unist-util-filter)\n    — Create a new tree with nodes that pass a check\n*   [`unist-util-remove`](https://github.com/eush77/unist-util-remove)\n    — Remove nodes from tree\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/unist`][contributing] for ways to get\nstarted.\n\nThis organisation has a [Code of Conduct][coc].  By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/syntax-tree/unist-util-is.svg\n\n[travis]: https://travis-ci.org/syntax-tree/unist-util-is\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/syntax-tree/unist-util-is.svg\n\n[codecov]: https://codecov.io/github/syntax-tree/unist-util-is\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[unist]: https://github.com/syntax-tree/unist\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[test]: #function-testnode-index-parent\n\n[contributing]: https://github.com/syntax-tree/unist/blob/master/contributing.md\n\n[coc]: https://github.com/syntax-tree/unist/blob/master/code-of-conduct.md\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2015 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/unist-util-is/-/unist-util-is-2.1.2.tgz#1193fa8f2bfbbb82150633f3a8d2eb9a1c1d55db",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/unist-util-is/-/unist-util-is-2.1.2.tgz",
    "hash": "1193fa8f2bfbbb82150633f3a8d2eb9a1c1d55db",
    "integrity": "sha512-YkXBK/H9raAmG7KXck+UUpnKiNmUdB+aBGrknfQ4EreE1banuzrKABx3jP6Z5Z3fMSPMQQmeXBlKpCbMwBkxVw==",
    "registry": "npm",
    "packageName": "unist-util-is"
  },
  "registry": "npm",
  "hash": "1193fa8f2bfbbb82150633f3a8d2eb9a1c1d55db"
}