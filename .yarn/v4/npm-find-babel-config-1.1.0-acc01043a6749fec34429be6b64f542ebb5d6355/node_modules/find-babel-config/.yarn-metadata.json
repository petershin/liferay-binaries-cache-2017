{
  "manifest": {
    "name": "find-babel-config",
    "version": "1.1.0",
    "main": "lib/index.js",
    "description": "Find the closest babel config based on a directory",
    "repository": {
      "type": "git",
      "url": "https://github.com/tleunen/find-babel-config.git"
    },
    "engines": {
      "node": ">=4.0.0"
    },
    "author": {
      "name": "Tommy Leunen",
      "email": "tommy.leunen@gmail.com",
      "url": "http://tommyleunen.com"
    },
    "license": "MIT",
    "keywords": [
      "babel",
      "config",
      "loader",
      "finder",
      "babelrc"
    ],
    "dependencies": {
      "json5": "^0.5.1",
      "path-exists": "^3.0.0"
    },
    "devDependencies": {
      "babel-cli": "^6.24.1",
      "babel-jest": "^20.0.0",
      "babel-preset-env": "^1.4.0",
      "eslint": "^3.19.0",
      "eslint-config-airbnb-base": "^11.1.3",
      "eslint-plugin-import": "^2.2.0",
      "jest": "^20.0.0",
      "standard-version": "^4.0.0"
    },
    "scripts": {
      "lint": "eslint src test",
      "pretest": "npm run lint",
      "test": "jest --coverage",
      "test:watch": "jest --watch",
      "test:suite": "jest",
      "compile": "babel src --out-dir lib",
      "prepublish": "npm run compile",
      "release": "standard-version"
    },
    "jest": {
      "testRegex": "/test/.*\\.test\\.js$",
      "collectCoverageFrom": [
        "src/**/*.js"
      ]
    },
    "greenkeeper": {
      "ignore": [
        "eslint",
        "eslint-plugin-import",
        "babel-jest"
      ]
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-find-babel-config-1.1.0-acc01043a6749fec34429be6b64f542ebb5d6355\\node_modules\\find-babel-config\\package.json",
    "readmeFilename": "README.md",
    "readme": "# find-babel-config\n[![npm][npm-version-image]][npm-url] [![Build Status][ci-image]][ci-url] [![Coverage Status][coverage-image]][coverage-url]\n\nHelper function to retrieve the closest Babel configuration from a specific directory.\n\n## Installation\n\n```sh\nnpm install --save find-babel-config\n```\n\n## Usage\n\n### Async\n\n```js\n// directory can be an absolute or relative path\n// If it's a relative path, it is relative to the current working directory (process.cwd())\nconst directory = 'src';\nfindBabelConfig(directory).then(({ file, config }) => {\n    if (file) {\n        // file is the file in which the config is found\n        console.log(file);\n        // config is a JS plain object with the babel config\n        console.log(config);\n    }\n});\n```\n\n### Sync\n\n```js\n// directory can be an absolute or relative path\n// If it's a relative path, it is relative to the current working directory (process.cwd())\nconst directory = 'src';\nconst { file, config } = findBabelConfig.sync(directory);\n// if c === null, the config wasn't found\nif (file) {\n    // file is the file in which the config is found\n    console.log(file);\n    // config is a JS plain object with the babel config\n    console.log(config);\n}\n```\n\nA second parameter can be given to `findBabelConfig`, it specifies the `depth` of search. By default, this value is `Infinity` but you can set the value you want: `findBabelConfig('src', 10)`.\n\n## License\n\nMIT, see [LICENSE.md](/LICENSE.md) for details.\n\n[ci-image]: https://circleci.com/gh/tleunen/find-babel-config.svg?style=shield\n[ci-url]: https://circleci.com/gh/tleunen/find-babel-config\n[coverage-image]: https://codecov.io/gh/tleunen/find-babel-config/branch/master/graph/badge.svg\n[coverage-url]: https://codecov.io/gh/tleunen/find-babel-config\n[npm-version-image]: https://img.shields.io/npm/v/find-babel-config.svg\n[npm-url]: https://www.npmjs.com/package/find-babel-config\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Tommy Leunen <tommy.leunen@gmail.com> (tommyleunen.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/find-babel-config/-/find-babel-config-1.1.0.tgz#acc01043a6749fec34429be6b64f542ebb5d6355",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/find-babel-config/-/find-babel-config-1.1.0.tgz",
    "hash": "acc01043a6749fec34429be6b64f542ebb5d6355",
    "integrity": "sha1-rMAQQ6Z0n+w0Qpvmtk9ULrtdY1U=",
    "registry": "npm",
    "packageName": "find-babel-config"
  },
  "registry": "npm",
  "hash": "acc01043a6749fec34429be6b64f542ebb5d6355"
}