{
  "manifest": {
    "name": "gulp-wrapper",
    "version": "1.0.0",
    "description": "A gulp plugin for wrapping files with custom strings. Access to filename is given through interpolation.",
    "main": "index.js",
    "scripts": {
      "test": "node node_modules/eslint/bin/eslint.js index.js && node_modules/.bin/mocha -R spec"
    },
    "keywords": [
      "gulp-wrapper",
      "wrap",
      "wrapper",
      "header",
      "footer",
      "gulpplugin"
    ],
    "author": {
      "name": "Antonis Karamitros",
      "email": "antouankar@gmail.com",
      "url": "https://github.com/antouank"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/AntouanK/gulp-wrapper.git"
    },
    "license": "MIT",
    "dependencies": {
      "gulp-util": "^3.0.4",
      "through2": "^0.6.5"
    },
    "devDependencies": {
      "eslint": "^0.21.0",
      "mocha": "^2.2.5",
      "should": "^6.0.1"
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-gulp-wrapper-1.0.0-2bd3c3c852921d209ea448eac2810811dd6a2bf3\\node_modules\\gulp-wrapper\\package.json",
    "readmeFilename": "README.md",
    "readme": "gulp-wrapper\n============\n[![Build Status](https://travis-ci.org/AntouanK/gulp-wrapper.png?branch=master)](https://travis-ci.org/AntouanK/gulp-wrapper) [![NPM version](https://badge.fury.io/js/gulp-wrapper.png)](http://badge.fury.io/js/gulp-wrapper)\n\n> A [Gulp](https://github.com/wearefractal/gulp) plugin for wrapping files with custom strings.\nBasically `gulp-header` & `gulp-footer` together.\nWith the addition that the filename is revealed to the user ( with ${filename} ).\n\n##Usage\nFor example, on build I can wrap an HTML file with `<script>` template tags and specify the filename id. ( angular templates are a good use case )\n\nsample template file\n\n```\n<div>\n  <span>my template HTML is here</span>\n</div>\n```\n\nso in my `gulpfile.js` I can do\n\n```javascript\n\nvar gulp    = require('gulp'),\n    wrapper = require('gulp-wrapper');\n\n// ...\ngulp.src('template.html')\n    .pipe(wrapper({\n       header: '<script type=\"text/ng-template\" id=\"${filename}\">\\n',\n       footer: '</script>\\n'\n    }))\n    .pipe(gulp.dest('out'));\n```\n\nthe result is :\n```\n<script type=\"text/ng-template\" id=\"template.html\">\n<div>\n  <span>my template HTML is here</span>\n</div>\n</script>\n```\n\n\n##API\n\n\n####options.header\nType: `string` or `function`\n\nThe `string` you want to prepend to the file. The file name is available through interpolation `${filename}`\n\n```javascript\n//...\ngulp.src('script/*.js')\n    .pipe(wrapper({ header: '/* ${filename} MyCompany 2014 */'}))\n```\n\nA `function` that takes `file` as argument, and returns the string to be the header.\n```javascript\n//...\ngulp.src('script/*.js')\n    .pipe(wrapper({ header: function(file){ return '/* '+ file.path +' MyCompany 2014*/'; } }))\n```\n\n</br>\n####options.footer\nType: `string` or `function`\n\nThe `string` you want to append to the file. The file name is available through interpolation `${filename}`\n\n```javascript\n//...\ngulp.src('script/*.js')\n\t.pipe(wrapper({ footer: '/* ${filename} MyCompany 2014 */'}))\n```\nA `function` that takes `file` as argument, and returns the string to be the footer.\n```javascript\n//...\ngulp.src('script/*.js')\n    .pipe(wrapper({ footer: function(file){ return '/* '+ file.path +' MyCompany 2014*/'; } }))\n```\n",
    "licenseText": "Copyright 2014, Antonis Karamitros (the \"Original Author\")\nAll rights reserved.\n\nMIT +no-false-attribs License\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nDistributions of all or part of the Software intended to be used\nby the recipients as they would use the unmodified Software,\ncontaining modifications that substantially alter, remove, or\ndisable functionality of the Software, outside of the documented\nconfiguration mechanisms provided by the Software, shall be\nmodified such that the Original Author's bug reporting email\naddresses and urls are either replaced with the contact information\nof the parties responsible for the changes, or removed entirely.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n\nExcept where noted, this license applies to any and all software\nprograms and associated documentation files created by the\nOriginal Author, when distributed with the Software.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/gulp-wrapper/-/gulp-wrapper-1.0.0.tgz#2bd3c3c852921d209ea448eac2810811dd6a2bf3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/gulp-wrapper/-/gulp-wrapper-1.0.0.tgz",
    "hash": "2bd3c3c852921d209ea448eac2810811dd6a2bf3",
    "integrity": "sha1-K9PDyFKSHSCepEjqwoEIEd1qK/M=",
    "registry": "npm",
    "packageName": "gulp-wrapper"
  },
  "registry": "npm",
  "hash": "2bd3c3c852921d209ea448eac2810811dd6a2bf3"
}