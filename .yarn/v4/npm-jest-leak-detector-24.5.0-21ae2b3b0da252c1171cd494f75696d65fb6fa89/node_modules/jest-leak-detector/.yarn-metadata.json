{
  "manifest": {
    "name": "jest-leak-detector",
    "version": "24.5.0",
    "repository": {
      "type": "git",
      "url": "https://github.com/facebook/jest.git",
      "directory": "packages/jest-leak-detector"
    },
    "license": "MIT",
    "main": "build/index.js",
    "types": "build/index.d.ts",
    "dependencies": {
      "pretty-format": "^24.5.0"
    },
    "devDependencies": {
      "@types/weak": "^1.0.0",
      "weak": "^1.0.1"
    },
    "engines": {
      "node": ">= 6"
    },
    "publishConfig": {
      "access": "public"
    },
    "gitHead": "800533020f5b2f153615c821ed7cb12fd868fa6f",
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-jest-leak-detector-24.5.0-21ae2b3b0da252c1171cd494f75696d65fb6fa89\\node_modules\\jest-leak-detector\\package.json",
    "readmeFilename": "README.md",
    "readme": "# jest-leak-detector\n\nModule for verifying whether an object has been garbage collected or not.\n\nInternally creates a weak reference to the object, and forces garbage collection to happen. If the reference is gone, it meant no one else was pointing to the object.\n\n## Example\n\n```javascript\nlet reference = {};\n\nconst detector = new LeakDetector(reference);\n\n// Reference is held in memory.\nconsole.log(detector.isLeaked()); // true\n\n// We destroy the only reference to the object.\nreference = null;\n\n// Reference is gone.\nconsole.log(detector.isLeaked()); // false\n```\n",
    "description": "Module for verifying whether an object has been garbage collected or not.",
    "licenseText": "MIT License\n\nFor Jest software\n\nCopyright (c) 2014-present, Facebook, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/jest-leak-detector/-/jest-leak-detector-24.5.0.tgz#21ae2b3b0da252c1171cd494f75696d65fb6fa89",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/jest-leak-detector/-/jest-leak-detector-24.5.0.tgz",
    "hash": "21ae2b3b0da252c1171cd494f75696d65fb6fa89",
    "integrity": "sha512-LZKBjGovFRx3cRBkqmIg+BZnxbrLqhQl09IziMk3oeh1OV81Hg30RUIx885mq8qBv1PA0comB9bjKcuyNO1bCQ==",
    "registry": "npm",
    "packageName": "jest-leak-detector"
  },
  "registry": "npm",
  "hash": "21ae2b3b0da252c1171cd494f75696d65fb6fa89"
}