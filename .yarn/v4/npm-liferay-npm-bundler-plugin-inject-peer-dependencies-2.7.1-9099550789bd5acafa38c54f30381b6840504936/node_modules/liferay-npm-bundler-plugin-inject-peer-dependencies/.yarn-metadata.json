{
  "manifest": {
    "name": "liferay-npm-bundler-plugin-inject-peer-dependencies",
    "version": "2.7.1",
    "description": "A liferay-npm-bundler plugin to force injection of dependencies in packages declaring peer dependencies.",
    "main": "lib/index.js",
    "scripts": {
      "build": "babel --source-maps -D -d lib src",
      "prepublish": "npm run build"
    },
    "devDependencies": {
      "babel-cli": "^6.24.1",
      "babel-preset-es2015": "^6.24.1"
    },
    "dependencies": {
      "globby": "^8.0.1",
      "liferay-npm-build-tools-common": "2.7.1",
      "read-json-sync": "^2.0.0-0",
      "resolve": "^1.6.0"
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-liferay-npm-bundler-plugin-inject-peer-dependencies-2.7.1-9099550789bd5acafa38c54f30381b6840504936\\node_modules\\liferay-npm-bundler-plugin-inject-peer-dependencies\\package.json",
    "readmeFilename": "README.md",
    "readme": "# liferay-npm-bundler-plugin-inject-peer-dependencies\n\n> Inject peer and undeclared dependencies (as long as they are installed under\n\t\"node_modules\") in package.json files.\n\n## Installation\n\n```sh\nnpm install --save-dev liferay-npm-bundler-plugin-inject-peer-dependencies\n```\n\n## Usage\n\nAdd the following to your `.npmbundlerrc` file:\n\n**Without options:**\n\n```json\n{\n\t\"*\": {\n\t\t\"plugins\": [\"inject-peer-dependencies\"]\n\t}\n}\n```\n\n**With options:**\n\n```json\n{\n\t\"*\": {\n\t\t\"plugins\": [\n\t\t\t[\n\t\t\t\t\"inject-peer-dependencies\",\n\t\t\t\t{\n\t\t\t\t\t\"defineCall\": \"Liferay.Loader.define\"\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\t}\n}\n```\n\n## Technical Details\n\nThis plugin injects missing dependencies in `package.json` files when they are\nfound inside AMD `define()` calls in any of their module files and the\ndependency is installed under \"node_modules\". This is needed for peer\ndependencies to work correctly under Liferay's npm architecture and it may also\nmake some incorrect setups work they way they do on Node.js.\n\nTo determine the version of the dependencies to inject, the plugin resolves the\npeer/undeclared packages from the context of the module where they are\nreferenced using the standard node resolve algorithm.\n\nPlease note that, for the referenced packages to be included they must also be\nlisted in the project's `package.json` so that they are included in the final\nOSGi bundle.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/liferay-npm-bundler-plugin-inject-peer-dependencies/-/liferay-npm-bundler-plugin-inject-peer-dependencies-2.7.1.tgz#9099550789bd5acafa38c54f30381b6840504936",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/liferay-npm-bundler-plugin-inject-peer-dependencies/-/liferay-npm-bundler-plugin-inject-peer-dependencies-2.7.1.tgz",
    "hash": "9099550789bd5acafa38c54f30381b6840504936",
    "integrity": "sha512-9oFDg7z1ShrQSOMX/gLHv5mjJ76keEelTfoeb2pmPGkhmIK+DWJG12ZGjgQEtn/6lMWAU8ALCVAqxp5N5zJKGg==",
    "registry": "npm",
    "packageName": "liferay-npm-bundler-plugin-inject-peer-dependencies"
  },
  "registry": "npm",
  "hash": "9099550789bd5acafa38c54f30381b6840504936"
}