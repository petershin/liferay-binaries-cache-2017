{
  "manifest": {
    "name": "d3-random",
    "version": "1.1.2",
    "description": "Generate random numbers from various distributions.",
    "keywords": [
      "d3",
      "d3-module",
      "random",
      "rng"
    ],
    "homepage": "https://d3js.org/d3-random/",
    "license": "BSD-3-Clause",
    "author": {
      "name": "Mike Bostock",
      "url": "http://bost.ocks.org/mike"
    },
    "main": "dist/d3-random.js",
    "unpkg": "dist/d3-random.min.js",
    "jsdelivr": "dist/d3-random.min.js",
    "module": "src/index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/d3/d3-random.git"
    },
    "scripts": {
      "pretest": "rollup -c",
      "test": "tape 'test/**/*-test.js' && eslint src test",
      "prepublishOnly": "rm -rf dist && yarn test",
      "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../${npm_package_name}/dist/${npm_package_name}.js ${npm_package_name}.v${npm_package_version%%.*}.js && cp ../${npm_package_name}/dist/${npm_package_name}.min.js ${npm_package_name}.v${npm_package_version%%.*}.min.js && git add ${npm_package_name}.v${npm_package_version%%.*}.js ${npm_package_name}.v${npm_package_version%%.*}.min.js && git commit -m \"${npm_package_name} ${npm_package_version}\" && git push && cd - && zip -j dist/${npm_package_name}.zip -- LICENSE README.md dist/${npm_package_name}.js dist/${npm_package_name}.min.js"
    },
    "devDependencies": {
      "d3-array": "1",
      "eslint": "5",
      "rollup": "0.64",
      "rollup-plugin-terser": "1",
      "seedrandom": "2",
      "tape": "4"
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-d3-random-1.1.2-2833be7c124360bf9e2d3fd4f33847cfe6cab291\\node_modules\\d3-random\\package.json",
    "readmeFilename": "README.md",
    "readme": "# d3-random\n\nGenerate random numbers from various distributions.\n\n## Installing\n\nIf you use NPM, `npm install d3-random`. Otherwise, download the [latest release](https://github.com/d3/d3-random/releases/latest). You can also load directly from [d3js.org](https://d3js.org), either as a [standalone library](https://d3js.org/d3-random.v1.min.js) or as part of [D3 4.0](https://github.com/d3/d3). AMD, CommonJS, and vanilla environments are supported. In vanilla, a `d3` global is exported:\n\n```html\n<script src=\"https://d3js.org/d3-random.v1.min.js\"></script>\n<script>\n\nvar random = d3.randomUniform(1, 10);\n\n</script>\n```\n\n[Try d3-random in your browser.](https://runkit.com/npm/d3-random)\n\n## API Reference\n\n<a name=\"randomUniform\" href=\"#randomUniform\">#</a> d3.<b>randomUniform</b>([<i>min</i>, ][<i>max</i>]) [<>](https://github.com/d3/d3-random/blob/master/src/uniform.js \"Source\")\n\nReturns a function for generating random numbers with a [uniform distribution](https://en.wikipedia.org/wiki/Uniform_distribution_\\(continuous\\)). The minimum allowed value of a returned number is *min*, and the maximum is *max*. If *min* is not specified, it defaults to 0; if *max* is not specified, it defaults to 1. For example:\n\n```js\nd3.randomUniform(6)(); // Returns a number greater than or equal to 0 and less than 6.\nd3.randomUniform(1, 5)(); // Returns a number greater than or equal to 1 and less than 5.\n```\n\nNote that you can also use the built-in [Math.random](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/random) to generate uniform distributions directly. For example, to generate a random integer between 0 and 99 (inclusive), you can say `Math.random() * 100 | 0`.\n\n<a name=\"randomNormal\" href=\"#randomNormal\">#</a> d3.<b>randomNormal</b>([<i>mu</i>][, <i>sigma</i>]) [<>](https://github.com/d3/d3-random/blob/master/src/normal.js \"Source\")\n\nReturns a function for generating random numbers with a [normal (Gaussian) distribution](https://en.wikipedia.org/wiki/Normal_distribution). The expected value of the generated numbers is *mu*, with the given standard deviation *sigma*. If *mu* is not specified, it defaults to 0; if *sigma* is not specified, it defaults to 1.\n\n<a name=\"randomLogNormal\" href=\"#randomLogNormal\">#</a> d3.<b>randomLogNormal</b>([<i>mu</i>][, <i>sigma</i>]) [<>](https://github.com/d3/d3-random/blob/master/src/logNormal.js \"Source\")\n\nReturns a function for generating random numbers with a [log-normal distribution](https://en.wikipedia.org/wiki/Log-normal_distribution). The expected value of the random variable’s natural logarithm is *mu*, with the given standard deviation *sigma*. If *mu* is not specified, it defaults to 0; if *sigma* is not specified, it defaults to 1.\n\n<a name=\"randomBates\" href=\"#randomBates\">#</a> d3.<b>randomBates</b>(<i>n</i>) [<>](https://github.com/d3/d3-random/blob/master/src/bates.js \"Source\")\n\nReturns a function for generating random numbers with a [Bates distribution](https://en.wikipedia.org/wiki/Bates_distribution) with *n* independent variables.\n\n<a name=\"randomIrwinHall\" href=\"#randomIrwinHall\">#</a> d3.<b>randomIrwinHall</b>(<i>n</i>) [<>](https://github.com/d3/d3-random/blob/master/src/irwinHall.js \"Source\")\n\nReturns a function for generating random numbers with an [Irwin–Hall distribution](https://en.wikipedia.org/wiki/Irwin–Hall_distribution) with *n* independent variables.\n\n<a name=\"randomExponential\" href=\"#randomExponential\">#</a> d3.<b>randomExponential</b>(<i>lambda</i>) [<>](https://github.com/d3/d3-random/blob/master/src/exponential.js \"Source\")\n\nReturns a function for generating random numbers with an [exponential distribution](https://en.wikipedia.org/wiki/Exponential_distribution) with the rate *lambda*; equivalent to time between events in a [Poisson process](https://en.wikipedia.org/wiki/Poisson_point_process) with a mean of 1 / *lambda*. For example, exponential(1/40) generates random times between events where, on average, one event occurs every 40 units of time.\n\n<a name=\"random_source\" href=\"#random_source\">#</a> <i>random</i>.<b>source</b>(<i>source</i>)\n\nReturns the same type of function for generating random numbers but where the given random number generator *source* is used as the source of randomness instead of Math.random. The given random number generator must implement the same interface as Math.random and only return values in the range [0, 1). This is useful when a seeded random number generator is preferable to Math.random. For example:\n\n```js\nvar d3 = require(\"d3-random\"),\n    seedrandom = require(\"seedrandom\"),\n    random = d3.randomNormal.source(seedrandom(\"a22ebc7c488a3a47\"))(0, 1);\n\nrandom(); // 0.9744193494813501\n```\n",
    "licenseText": "Copyright 2010-2016 Mike Bostock\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the author nor the names of contributors may be used to\n  endorse or promote products derived from this software without specific prior\n  written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/d3-random/-/d3-random-1.1.2.tgz#2833be7c124360bf9e2d3fd4f33847cfe6cab291",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/d3-random/-/d3-random-1.1.2.tgz",
    "hash": "2833be7c124360bf9e2d3fd4f33847cfe6cab291",
    "integrity": "sha512-6AK5BNpIFqP+cx/sreKzNjWbwZQCSUatxq+pPRmFIQaWuoD+NrbVWw7YWpHiXpCQ/NanKdtGDuB+VQcZDaEmYQ==",
    "registry": "npm",
    "packageName": "d3-random"
  },
  "registry": "npm",
  "hash": "2833be7c124360bf9e2d3fd4f33847cfe6cab291"
}