{
  "manifest": {
    "name": "messageformat-parser",
    "version": "1.1.0",
    "description": "A PEG.js parser for ICU MessageFormat strings -- part of messageformat.js",
    "keywords": [
      "icu",
      "messageformat",
      "parser"
    ],
    "contributors": [
      {
        "name": "Alex Sexton",
        "email": "alexsexton@gmail.com"
      },
      {
        "name": "Eemeli Aro",
        "email": "eemeli@gmail.com"
      },
      {
        "name": "Nikola Kovacs",
        "email": "nikola.kovacs@gmail.com"
      },
      {
        "name": "Adrian Vogelsgesang",
        "email": "adrian.vogelsgesang@tum.de"
      }
    ],
    "license": "MIT",
    "homepage": "https://messageformat.github.io/",
    "repository": {
      "type": "git",
      "url": "https://github.com/messageformat/parser.git"
    },
    "main": "parser.js",
    "files": [
      "parser.pegjs",
      "parser.js"
    ],
    "devDependencies": {
      "expect.js": "^0.3.1",
      "mocha": "^3.0.2",
      "pegjs": "^0.10.0"
    },
    "scripts": {
      "prepublish": "pegjs parser.pegjs",
      "test": "mocha"
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-messageformat-parser-1.1.0-13ba2250a76bbde8e0fca0dbb3475f95c594a90a\\node_modules\\messageformat-parser\\package.json",
    "readmeFilename": "README.md",
    "readme": "# messageformat-parser  <a href=\"http://travis-ci.org/messageformat/parser\"><img align=\"right\" alt=\"Build Status\" src=\"https://secure.travis-ci.org/messageformat/parser.png\"></a>\n\nA [PEG.js] parser for [ICU MessageFormat] strings – part of [messageformat.js].\nOutputs an AST defined by [parser.pegjs].\n\nThe generated parser function takes two parameters, first the string to be\nparsed, and a second optional parameter `options`, an object with the following\npossible keys:\n\n- `cardinal` and `ordinal` – Arrays of valid plural categories for the current\n  locale, used to validate plural and selectordinal keys. If these are missing\n  or set to false, the full set of valid [Unicode CLDR] keys is used: `'zero',\n  'one', 'two', 'few', 'many', 'other'`. To disable this check, pass in an empty\n  array.\n\n- `strictFunctionParams` – By default, function parameters are split on commas\n  and trimmed, so the parameters in `{x,fn,   a,   b   }` are parsed as\n  `['a','b']`. Setting `strictFunctionParams` to true will make the parser\n  follow the ICU MessageFormat spec more closely, and result in a params array\n  with a single element: `['   a,   b   ']`.\n\n[ICU MessageFormat]: https://messageformat.github.io/guide/\n[messageformat.js]: https://messageformat.github.io/\n[parser.pegjs]: ./parser.pegjs\n[PEG.js]: http://pegjs.org/\n[Unicode CLDR]: http://cldr.unicode.org/index/cldr-spec/plural-rules\n\n\n#### Installation\n\n```sh\nnpm install messageformat-parser\n```\n\n\n#### Usage\n\n```js\n> var parse = require('messageformat-parser').parse;\n\n> parse('So {wow}.')\n[ 'So ', { type: 'argument', arg: 'wow' }, '.' ]\n\n> parse('Such { thing }. { count, selectordinal, one {First} two {Second}' +\n        '                  few {Third} other {#th} } word.')\n[ 'Such ',\n  { type: 'argument', arg: 'thing' },\n  '. ',\n  { type: 'selectordinal',\n    arg: 'count',\n    offset: 0,\n    cases:\n     [ { key: 'one', tokens: [ 'First' ] },\n       { key: 'two', tokens: [ 'Second' ] },\n       { key: 'few', tokens: [ 'Third' ] },\n       { key: 'other', tokens: [ { type: 'octothorpe' }, 'th' ] } ] },\n  ' word.' ]\n\n> parse('Many{type,select,plural{ numbers}selectordinal{ counting}' +\n                         'select{ choices}other{ some {type}}}.')\n[ 'Many',\n  { type: 'select',\n    arg: 'type',\n    cases:\n     [ { key: 'plural', tokens: [ ' numbers' ] },\n       { key: 'selectordinal', tokens: [ ' counting' ] },\n       { key: 'select', tokens: [ ' choices' ] },\n       { key: 'other', tokens: [ ' some',\n                                 { type: 'argument', arg: 'type' } ] } ] },\n  '.' ]\n\n> parse('{Such compliance')\n// SyntaxError: Expected \",\", \"}\" or [ \\t\\n\\r] but \"c\" found.\n\n> var msg = '{words, plural, zero{No words} one{One word} other{# words}}';\n> var englishKeys = { cardinal: [ 'one', 'other' ],\n                      ordinal: [ 'one', 'two', 'few', 'other' ] };\n> parse(msg)\n[ { type: 'plural',\n    arg: 'words',\n    offset: 0,\n    cases:\n     [ { key: 'zero', tokens: [ 'No words' ] },\n       { key: 'one', tokens: [ 'One word' ] },\n       { key: 'other', tokens: [ { type: 'octothorpe' }, ' words' ] } ] } ]\n\n> parse(msg, englishKeys)\n// Error: Invalid key `zero` for argument `words`. Valid plural keys for this\n//        locale are `one`, `other`, and explicit keys like `=0`.\n```\n\n#### Contributor License Agreement\nSee the [messageformat.js README][CLA] for details.\n\n[CLA]: https://github.com/messageformat/messageformat.js#contributor-license-agreement\n",
    "licenseText": "Copyright 2012-2016 Alex Sexton, Eemeli Aro, and Contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/messageformat-parser/-/messageformat-parser-1.1.0.tgz#13ba2250a76bbde8e0fca0dbb3475f95c594a90a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/messageformat-parser/-/messageformat-parser-1.1.0.tgz",
    "hash": "13ba2250a76bbde8e0fca0dbb3475f95c594a90a",
    "integrity": "sha512-Hwem6G3MsKDLS1FtBRGIs8T50P1Q00r3srS6QJePCFbad9fq0nYxwf3rnU2BreApRGhmpKMV7oZI06Sy1c9TPA==",
    "registry": "npm",
    "packageName": "messageformat-parser"
  },
  "registry": "npm",
  "hash": "13ba2250a76bbde8e0fca0dbb3475f95c594a90a"
}