{
  "manifest": {
    "name": "cson-parser",
    "version": "1.3.5",
    "description": "Safe parsing of CSON files",
    "license": "BSD-3-Clause",
    "main": "lib/cson-parser.js",
    "homepage": "https://github.com/groupon/cson-parser",
    "repository": {
      "type": "git",
      "url": "git+ssh://git@github.com/groupon/cson-parser"
    },
    "bugs": {
      "url": "https://github.com/groupon/cson-parser/issues"
    },
    "scripts": {
      "pretest": "eslint lib test",
      "test": "mocha",
      "posttest": "nlm verify"
    },
    "nlm": {
      "license": {
        "files": [
          "lib"
        ]
      }
    },
    "dependencies": {
      "coffee-script": "^1.10.0"
    },
    "devDependencies": {
      "assertive": "^2.1.0",
      "eslint": "^2.0.0",
      "eslint-config-groupon-es5": "^3.0.0",
      "eslint-plugin-import": "^1.6.1",
      "eslint-plugin-node": "^2.0.0",
      "mocha": "^3.1.2",
      "nlm": "^3.0.0"
    },
    "author": {
      "name": "Groupon",
      "email": "opensource@groupon.com"
    },
    "keywords": [
      "cson",
      "parser"
    ],
    "files": [
      "*.js",
      "lib"
    ],
    "publishConfig": {
      "registry": "https://registry.npmjs.org"
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-cson-parser-1.3.5-7ec675e039145533bf2a6a856073f1599d9c2d24\\node_modules\\cson-parser\\package.json",
    "readmeFilename": "README.md",
    "readme": "# cson-parser\n\nA minimalistic CSON parser. Offers:\n\n* A strict subset of CSON that allows only data\n* Interface is identical to JSON.{parse,stringify}\n* Does not run the code, free of intermediate string representations\n* Sane parse error messages with line/column\n* Regular Expressions are considered data and will be accepted as well\n\nIn addition of pure data it allows for simple arithmetic expressions like\naddition and multiplication.\nThis allows more readable configuration of numbers,\nthe following is a valid strict CSON file:\n\n```coffee\ncachedData:\n  refreshIntervalMs: 5 * 60 * 1000\n```\n\n## Install\n\n`npm install --save cson-parser`\n\n## Usage\n\n```coffee\nCSON = require 'cson-parser'\n# This will print { a: '123' }\nconsole.log CSON.parse \"a: '123'\"\n```\n\n## High-level APIs\n\n`cson-parser` only offers basic parsing and serialization.\nBut there are some great tools if you want more than that:\n\n* [`fs-cson`](https://github.com/charlierudolph/fs-cson), read and write CSON files\n* [`CSON`](https://github.com/bevry/cson), provides file, coffeescript, javascript handling and a CLI\n* [`season`](https://www.npmjs.org/package/season),\n  atom.io's CSON package.\n  Includes CLI tool to convert CSON to JSON\n* [`grunt-cson`](https://www.npmjs.org/package/grunt-cson),\n  converts CSON to JSON as a grunt task\n* [`load-grunt-configs`](https://www.npmjs.org/package/load-grunt-configs),\n  loads grunt config from CSON files (among other formats)\n* [`fetcher`](https://www.npmjs.org/package/fetcher),\n  a declarative way to download (frontend) libraries, supports CSON configs\n* [`csonschema`](https://www.npmjs.org/package/csonschema),\n  parses [JSON Schema](http://json-schema.org) files written in CSON\n\nYou can find more on the\n[npm website](https://preview.npmjs.com/browse/depended/cson-parser).\n\n## FAQ\n\n### Why not just use YAML?\n\nYAML allows for some pretty complex constructs like anchor and alias,\nwhich can behave in unexpected ways, especially with nested objects.\nCSON is simpler while still offering most of the niceties of YAML.\n\n### Why not just use JSON?\n\nJSON doesn't offer multi-line strings and is generally a little noisier.\nAlso sometimes it can be nice to have comments in config files.\n\n### Why not just use CoffeeScript directly?\n\nYou don't want data files being able to run arbitrary code.\nEven when ran in a proper sandbox, `while(true)` is still possible.\n",
    "licenseText": "Copyright (c) 2014, Groupon, Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\nRedistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\nNeither the name of GROUPON nor the names of its contributors may be\nused to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/cson-parser/-/cson-parser-1.3.5.tgz#7ec675e039145533bf2a6a856073f1599d9c2d24",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/cson-parser/-/cson-parser-1.3.5.tgz",
    "hash": "7ec675e039145533bf2a6a856073f1599d9c2d24",
    "integrity": "sha1-fsZ14DkUVTO/KmqFYHPxWZ2cLSQ=",
    "registry": "npm",
    "packageName": "cson-parser"
  },
  "registry": "npm",
  "hash": "7ec675e039145533bf2a6a856073f1599d9c2d24"
}