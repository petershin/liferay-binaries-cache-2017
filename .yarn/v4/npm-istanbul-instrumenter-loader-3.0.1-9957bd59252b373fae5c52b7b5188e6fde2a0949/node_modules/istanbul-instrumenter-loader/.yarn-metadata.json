{
  "manifest": {
    "name": "istanbul-instrumenter-loader",
    "version": "3.0.1",
    "description": "Istanbul instrumenter loader for webpack",
    "author": {
      "name": "Kir Belevich",
      "url": "@deepsweet"
    },
    "main": "dist/cjs.js",
    "files": [
      "dist"
    ],
    "dependencies": {
      "convert-source-map": "^1.5.0",
      "istanbul-lib-instrument": "^1.7.3",
      "loader-utils": "^1.1.0",
      "schema-utils": "^0.3.0"
    },
    "engines": {
      "node": ">= 4.8 < 5.0.0 || >= 5.10"
    },
    "license": "MIT",
    "scripts": {
      "start": "npm run build -- -w",
      "build": "cross-env NODE_ENV=production babel src -d dist --ignore 'src/**/*.test.js' --copy-files",
      "clean": "del-cli dist",
      "clean:dist": "del-cli dist",
      "lint": "eslint --cache src test",
      "lint-staged": "lint-staged",
      "prebuild": "npm run clean",
      "prepublish": "npm run build",
      "release": "standard-version",
      "security": "nsp check",
      "test": "jest",
      "test:watch": "jest --watch",
      "test:coverage": "jest --collectCoverageFrom='src/**/*.js' --coverage",
      "travis:coverage": "npm run test:coverage -- --runInBand",
      "travis:lint": "npm run lint && npm run security",
      "travis:test": "npm run test -- --runInBand",
      "appveyor:test": "npm run test",
      "webpack-defaults": "webpack-defaults"
    },
    "devDependencies": {
      "babel-cli": "^6.26.0",
      "babel-jest": "^21.2.0",
      "babel-loader": "^7.1.2",
      "babel-plugin-transform-object-rest-spread": "^6.26.0",
      "babel-polyfill": "^6.26.0",
      "babel-preset-env": "^1.6.1",
      "cross-env": "^5.1.0",
      "del-cli": "^1.1.0",
      "eslint": "^4.9.0",
      "eslint-config-webpack": "^1.2.5",
      "eslint-plugin-import": "^2.8.0",
      "jest": "^21.2.1",
      "lint-staged": "^4.3.0",
      "memory-fs": "^0.4.1",
      "nsp": "^2.8.1",
      "pre-commit": "^1.2.2",
      "standard-version": "^4.2.0",
      "webpack": "^3.8.1",
      "webpack-defaults": "^1.6.0"
    },
    "homepage": "https://github.com/webpack-contrib/istanbul-instrumenter-loader",
    "repository": {
      "type": "git",
      "url": "https://github.com/webpack-contrib/istanbul-instrumenter-loader.git"
    },
    "keywords": [
      "webpack",
      "loader",
      "istanbul",
      "coverage"
    ],
    "pre-commit": "lint-staged",
    "lint-staged": {
      "*.js": [
        "eslint --fix",
        "git add"
      ]
    },
    "peerDependencies": {
      "webpack": "^2.0.0 || ^3.0.0 || ^4.0.0"
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-istanbul-instrumenter-loader-3.0.1-9957bd59252b373fae5c52b7b5188e6fde2a0949\\node_modules\\istanbul-instrumenter-loader\\package.json",
    "readmeFilename": "README.md",
    "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <h1>Istanbul Instrumenter Loader</h1>\n</div>\n\nInstrument JS files with [istanbul-lib-instrument](https://github.com/istanbuljs/istanbuljs/tree/master/packages/istanbul-lib-instrument) for subsequent code coverage reporting\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm i -D istanbul-instrumenter-loader\n```\n\n<h2 align=\"center\"><a href=\"https://webpack.js.org/concepts/loaders\">Usage</a></h2>\n\n### `References`\n\n* [karma-webpack](https://github.com/webpack/karma-webpack)\n* [karma-coverage-istanbul-reporter](https://github.com/mattlewis92/karma-coverage-istanbul-reporter)\n\n### `Structure`\n\n```\n├─ src\n│ |– components\n│ | |– bar\n│ | │ |─ index.js\n│ | |– foo/\n│     |– index.js\n|– test\n| |– src\n| | |– components\n| | | |– foo\n| | | | |– index.js\n```\n\nTo create a code coverage report for all components (even for those for which you have no tests yet) you have to require all the 1) sources and 2) tests. Something like it's described in [\"alternative usage\" of karma-webpack](https://github.com/webpack/karma-webpack#alternative-usage)\n\n**test/index.js**\n```js\n// requires all tests in `project/test/src/components/**/index.js`\nconst tests = require.context('./src/components/', true, /index\\.js$/);\n\ntests.keys().forEach(tests);\n\n// requires all components in `project/src/components/**/index.js`\nconst components = require.context('../src/components/', true, /index\\.js$/);\n\ncomponents.keys().forEach(components);\n```\n\n> ℹ️  This file will be the only `entry` point for `karma`\n\n**karma.conf.js**\n```js\nconfig.set({\n  ...\n  files: [\n    'test/index.js'\n  ],\n  preprocessors: {\n    'test/index.js': 'webpack'\n  },\n  webpack: {\n    ...\n    module: {\n      rules: [\n        // instrument only testing sources with Istanbul\n        {\n          test: /\\.js$/,\n          use: { loader: 'istanbul-instrumenter-loader' },\n          include: path.resolve('src/components/')\n        }\n      ]\n    }\n    ...\n  },\n  reporters: [ 'progress', 'coverage-istanbul' ],\n  coverageIstanbulReporter: {\n    reports: [ 'text-summary' ],\n    fixWebpackSourcePaths: true\n  }\n  ...\n});\n```\n\n### with `Babel`\n\nYou must run the instrumentation as a post step\n\n**webpack.config.js**\n```js\n{\n  test: /\\.js$|\\.jsx$/,\n  use: {\n    loader: 'istanbul-instrumenter-loader',\n    options: { esModules: true }\n  },\n  enforce: 'post',\n  exclude: /node_modules|\\.spec\\.js$/,\n}\n```\n\n<h2 align=\"center\"><a href=\"https://github.com/istanbuljs/istanbuljs/blob/master/packages/istanbul-lib-instrument/api.md#instrumenter\">Options</a></h2>\n\nThe loader supports all options supported by `istanbul-lib-instrument`\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|**`debug`**|`{Boolean}`|`false`|Turn on debugging mode|\n|**`compact`**|`{Boolean}`|`true`|Generate compact code|\n|**`autoWrap`**|`{Boolean}`|`false`|Set to `true` to allow return statements outside of functions|\n|**`esModules`**|`{Boolean}`|`false`|Set to `true` to instrument ES2015 Modules|\n|**`coverageVariable`**|`{String}`|`__coverage__`|Name of global coverage variable|\n|**`preserveComments`**|`{Boolean}`|`false`|Preserve comments in `output`|\n|**`produceSourceMap`**|`{Boolean}`|`false`|Set to `true` to produce a source map for the instrumented code|\n|**`sourceMapUrlCallback`**|`{Function}`|`null`|A callback function that is called when a source map URL is found in the original code. This function is called with the source filename and the source map URL|\n\n**webpack.config.js**\n```js\n{\n  test: /\\.js$/,\n  use: {\n    loader: 'istanbul-instrumenter-loader',\n    options: {...options}\n  }\n}\n```\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars.githubusercontent.com/u/266822?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/deepsweet\">Kir Belevich</a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/bebraw\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/bebraw.png?v=3&s=150\">\n          </br>\n          Juho Vepsäläinen\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/d3viant0ne\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/d3viant0ne.png?v=3&s=150\">\n          </br>\n          Joshua Wiens\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/michael-ciniawsky\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/michael-ciniawsky.png?v=3&s=150\">\n          </br>\n          Michael Ciniawsky\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/mattlewis92\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/mattlewis92.png?v=3&s=150\">\n          </br>\n          Matt Lewis\n        </a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n[npm]: https://img.shields.io/npm/v/istanbul-instrumenter-loader.svg\n[npm-url]: https://npmjs.com/package/istanbul-instrumenter-loader\n\n[node]: https://img.shields.io/node/v/istanbul-instrumenter-loader.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/webpack-contrib/istanbul-instrumenter-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/istanbul-instrumenter-loader\n\n[tests]: http://img.shields.io/travis/webpack-contrib/istanbul-instrumenter-loader.svg\n[tests-url]: https://travis-ci.org/webpack-contrib/istanbul-instrumenter-loader\n\n[cover]: https://codecov.io/gh/webpack-contrib/istanbul-instrumenter-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/istanbul-instrumenter-loader\n\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n",
    "licenseText": "Copyright JS Foundation and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/istanbul-instrumenter-loader/-/istanbul-instrumenter-loader-3.0.1.tgz#9957bd59252b373fae5c52b7b5188e6fde2a0949",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/istanbul-instrumenter-loader/-/istanbul-instrumenter-loader-3.0.1.tgz",
    "hash": "9957bd59252b373fae5c52b7b5188e6fde2a0949",
    "integrity": "sha512-a5SPObZgS0jB/ixaKSMdn6n/gXSrK2S6q/UfRJBT3e6gQmVjwZROTODQsYW5ZNwOu78hG62Y3fWlebaVOL0C+w==",
    "registry": "npm",
    "packageName": "istanbul-instrumenter-loader"
  },
  "registry": "npm",
  "hash": "9957bd59252b373fae5c52b7b5188e6fde2a0949"
}