{
  "manifest": {
    "name": "karma-mocha",
    "version": "1.3.0",
    "description": "A Karma plugin. Adapter for Mocha testing framework.",
    "main": "lib/index.js",
    "sharedKarmaFiles": {
      "editorconfig": ".editorconfig",
      "gitattributes": ".gitattributes"
    },
    "scripts": {
      "test": "grunt test",
      "test:lib": "mocha test/lib"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/karma-runner/karma-mocha.git"
    },
    "keywords": [
      "karma-plugin",
      "karma-adapter",
      "mocha"
    ],
    "author": {
      "name": "Vojta Jina",
      "email": "vojta.jina@gmail.com"
    },
    "dependencies": {
      "minimist": "1.2.0"
    },
    "devDependencies": {
      "chai": "^3.4.1",
      "eslint": "^2.0.0",
      "eslint-config-standard": "^5.1.0",
      "eslint-plugin-promise": "^1.0.8",
      "eslint-plugin-react": "^5.2.2",
      "eslint-plugin-standard": "^1.3.2",
      "grunt": "~1.0",
      "grunt-auto-release": "~0.0.2",
      "grunt-bump": "~0.8.0",
      "grunt-conventional-changelog": "^6.0.1",
      "grunt-eslint": "^18.0.0",
      "grunt-karma": "2.x",
      "grunt-npm": "~0.0.2",
      "karma": "^1.0.0",
      "karma-chai": "^0.1.0",
      "karma-chrome-launcher": "^1.0.0",
      "karma-firefox-launcher": "^1.0.0",
      "karma-sinon": "^1.0.3",
      "load-grunt-tasks": "^3.2.0",
      "mocha": "^3.0.0",
      "mock-fs": "^3.12.1",
      "shared-karma-files": "git://github.com/karma-runner/shared-karma-files.git#82ae8d02",
      "sinon": "^1.17.2"
    },
    "license": "MIT",
    "contributors": [
      {
        "name": "Maksim Ryzhikov",
        "email": "rv.maksim@gmail.com"
      },
      {
        "name": "Friedel Ziegelmayer",
        "email": "friedel.ziegelmayer@gmail.com"
      },
      {
        "name": "dignifiedquire",
        "email": "friedel.ziegelmayer@gmail.com"
      },
      {
        "name": "Jordan Klassen",
        "email": "jordan@vidigami.com"
      },
      {
        "name": "Martin Hansen",
        "email": "martin@martinhansen.no"
      },
      {
        "name": "Mark Ethan Trostler",
        "email": "mark@zzo.com"
      },
      {
        "name": "Dave Geddes",
        "email": "davidcgeddes@gmail.com"
      },
      {
        "name": "Aliaksei Shytkin",
        "email": "e79eas@gmail.com"
      },
      {
        "name": "Pawel Kozlowski",
        "email": "pkozlowski.opensource@gmail.com"
      },
      {
        "name": "Christopher Hiller",
        "email": "boneskull@boneskull.com"
      },
      {
        "name": "Lukasz Bandzarewicz",
        "email": "lucassus@gmail.com"
      },
      {
        "name": "Jonathan Knapp",
        "email": "jon@coffeeandcode.com"
      },
      {
        "name": "Karolis Narkevicius",
        "email": "karolis.n@gmail.com"
      },
      {
        "name": "Mark Trostler",
        "email": "mark@zzo.com"
      },
      {
        "name": "Peter Halliday",
        "email": "pghalliday@gmail.com"
      },
      {
        "name": "Raphael Luba",
        "email": "raphael@leanbyte.com"
      },
      {
        "name": "Sahat Yalkabov",
        "email": "sakhat@gmail.com"
      },
      {
        "name": "Tim Macfarlane",
        "email": "timmacfarlane@gmail.com"
      },
      {
        "name": "Vova Bilonenko",
        "email": "bilonenko.v@gmail.com"
      },
      {
        "name": "dej611",
        "email": "marco@terraling.com"
      },
      {
        "name": "eiriksm",
        "email": "eirik@morland.no"
      },
      {
        "name": "patrick kettner",
        "email": "patrickkettner@gmail.com"
      },
      {
        "name": "Aymeric Beaumet",
        "email": "aymeric@beaumet.me"
      },
      {
        "name": "Christian Schlensker",
        "email": "christian@cswebartisan.com"
      },
      {
        "name": "Christian Schulze",
        "email": "christian.schulze@mywave.me"
      },
      {
        "name": "Ciro S. Costa",
        "email": "ciro.costa@usp.br"
      },
      {
        "name": "Dan Thareja",
        "email": "danthareja@gmail.com"
      },
      {
        "name": "Darryl Pogue",
        "email": "darryl@dpogue.ca"
      },
      {
        "name": "Darryl Pogue",
        "email": "dvpdiner2@gmail.com"
      },
      {
        "name": "JONATHAN PARK",
        "email": "jonathan@silvenstudios.com"
      },
      {
        "name": "James Morris",
        "email": "jamie@maloric.com"
      },
      {
        "name": "Jason Divock",
        "email": "jdivock@gmail.com"
      },
      {
        "name": "Jeff Jagoda",
        "email": "jeffrey.jagoda@gmail.com"
      }
    ],
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-karma-mocha-1.3.0-eeaac7ffc0e201eb63c467440d2b69c7cf3778bf\\node_modules\\karma-mocha\\package.json",
    "readmeFilename": "README.md",
    "readme": "# karma-mocha\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma-mocha)\n [![npm version](https://img.shields.io/npm/v/karma-mocha.svg?style=flat-square)](https://www.npmjs.com/package/karma-mocha) [![npm downloads](https://img.shields.io/npm/dm/karma-mocha.svg?style=flat-square)](https://www.npmjs.com/package/karma-mocha)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma-mocha/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma-mocha) [![Dependency Status](https://img.shields.io/david/karma-runner/karma-mocha.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-mocha) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma-mocha.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-mocha#info=devDependencies)\n\n> Adapter for the [Mocha](http://mochajs.org/) testing framework.\n\n## Installation\n\nInstall `karma-mocha` and `mocha` into to your project via `npm`:\n\n```shell\n$ npm install karma-mocha mocha --save-dev\n```\n\n`karma-mocha` should work with any version of `mocha`.\n\nSince `karma-mocha` is an adapter for [Karma](http://karma-runner.github.io), you likely have it installed already, but in case you don't:  \n\n```shell\n$ npm install karma --save-dev\n```\n\nIf you're having trouble, Karma provides [detailed instructions](http://karma-runner.github.io/1.0/intro/installation.html) on installation. \n\n## Configuration\nFollowing code shows the default configuration...\n```js\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    frameworks: ['mocha'],\n\n    files: [\n      '*.js'\n    ]\n  });\n};\n```\n\nIf you want to pass configuration options directly to mocha you can\ndo this in the following way\n\n```js\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    frameworks: ['mocha'],\n\n    files: [\n      '*.js'\n    ],\n\n    client: {\n      mocha: {\n        // change Karma's debug.html to the mocha web reporter\n        reporter: 'html',\n\n        // require specific files after Mocha is initialized\n        require: [require.resolve('bdd-lazy-var/bdd_lazy_var_global')],\n\n        // custom ui, defined in required file above\n        ui: 'bdd-lazy-var/global',\n      }\n    }\n  });\n};\n```\n\nIf you want run only some tests matching a given pattern you can\ndo this in the following way\n\n```sh\nkarma start &\nkarma run -- --grep=<pattern>\n```\n\nor\n\n```js\nmodule.exports = function(config) {\n  config.set({\n    ...\n    client: {\n      mocha: {\n        grep: '<pattern>', // passed directly to mocha\n        ...\n      }\n      ...\n    }\n  });\n};\n```\n\nIf you want to expose test properties specific to `mocha`, you can use the `expose` option:\n\n```js\nmodule.exports = function(config) {\n  config.set({\n    ...\n    client: {\n      mocha: {\n        expose: ['body'] // This will be exposed in a reporter as `result.mocha.body`\n        ...\n      }\n      ...\n    }\n  });\n};\n```\n\nIf you already have a configuration for Mocha in an opts file, you can use the `opts` option:\n\n```js\nmodule.exports = function(config) {\n  config.set({\n    ...\n    client: {\n      mocha: {\n        opts: 'test/mocha.opts' // You can set opts to equal true then plugin will load opts from default location 'test/mocha.opts'\n        ...\n      }\n      ...\n    }\n  });\n};\n```\n\n## Internals\n\nOn the end of each test `karma-mocha` passes to `karma` result object with fields:\n\n* `description` Test title.\n* `suite` List of titles of test suites.\n* `success` True if test is succeed, false otherwise.\n* `skipped` True if test is skipped.\n* `time` Test duration.\n* `log` List of errors.\n* `startTime` Milliseconds since epoch that the test started\n* `endTime` Milliseconds since epoch that the test ended\n* `assertionErrors` List of additional error info: \n    * `name` Error name.\n    * `message` Error message.\n    * `actual` Actual data in assertion, serialized to string.\n    * `expected` Expected data in assertion, serialized to string.\n    * `showDiff` True if it is configured by assertion to show diff.\n* `mocha` An optional object listed if you use the `expose` option\n\nThis object will be passed to test reporter.\n\nNB. the start and end times are added by the adapter whereas the duration is calculated by Mocha - as such they probably will not match arithmetically. Ie. `endTime - startTime !== duration`. These fields have been added so that timestamped reports can be matched up with other timestamped reports from the target device (eg. memory profiling data collected outside the browser)\n\n----\n\nFor more information on Karma see the [homepage].\n\n\n[homepage]: http://karma-runner.github.com\n",
    "licenseText": "The MIT License\n\nCopyright (C) 2011-2013 Google, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/karma-mocha/-/karma-mocha-1.3.0.tgz#eeaac7ffc0e201eb63c467440d2b69c7cf3778bf",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/karma-mocha/-/karma-mocha-1.3.0.tgz",
    "hash": "eeaac7ffc0e201eb63c467440d2b69c7cf3778bf",
    "integrity": "sha1-7qrH/8DiAetjxGdEDStpx883eL8=",
    "registry": "npm",
    "packageName": "karma-mocha"
  },
  "registry": "npm",
  "hash": "eeaac7ffc0e201eb63c467440d2b69c7cf3778bf"
}