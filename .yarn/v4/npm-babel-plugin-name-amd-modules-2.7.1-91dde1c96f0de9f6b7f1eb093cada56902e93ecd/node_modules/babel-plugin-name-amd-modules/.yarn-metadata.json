{
  "manifest": {
    "name": "babel-plugin-name-amd-modules",
    "version": "2.7.1",
    "description": "A Babel plugin to give name to AMD modules based on their path and package.",
    "main": "lib/index.js",
    "scripts": {
      "build": "babel --source-maps -D -d lib src",
      "prepublish": "npm run build"
    },
    "devDependencies": {
      "babel-cli": "^6.24.1",
      "babel-preset-es2015": "^6.24.1"
    },
    "dependencies": {
      "liferay-npm-build-tools-common": "2.7.1",
      "read-json-sync": "^1.1.1"
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-babel-plugin-name-amd-modules-2.7.1-91dde1c96f0de9f6b7f1eb093cada56902e93ecd\\node_modules\\babel-plugin-name-amd-modules\\package.json",
    "readmeFilename": "README.md",
    "readme": "# babel-plugin-name-amd-modules\n\n> Give a name to AMD modules based on package name and version and module path.\n\n## Example\n\n**In**\n\n```javascript\ndefine([], function(){})\n```\n\n**Out**\n\n```javascript\ndefine(\"package@1.0.0/index\", [], function () {});\n```\n\n## Installation\n\n```sh\nnpm install --save-dev babel-plugin-name-amd-modules\n```\n\n## Usage\n\nAdd the following to your `.babelrc` file:\n\n**Without options:**\n```json\n{\n  \"plugins\": [\"name-amd-modules\"]\n}\n```\n\n**With options:**\n```json\n{\n  \"plugins\": [\n    [\"name-amd-modules\", {\n        \"packageName\": \"my-npm-package\",\n        \"srcPrefixes\": [\n            \"packages/my-npm-package\",\n            \"packages/my-other-npm-package\"\n        ]\n    }]\n  ]\n}\n```\n\n## Technical Details and Options\n\nThis plugins scans modules for AMD `define()` calls and rewrites the module name\nargument with one based on the name of the package that contains the module and\nthe module's relative path inside that package (removing the extension from the\nfile name too).\n\nBy default (if no custom value is given for the `packageName` option) this \nplugin scans the parent folders of the module file until it finds a \n`package.json` file and reads the package name from it. Otherwise, the package \nname can be forced to any fixed value by providing a value other than\n`<package.json>` to the `packageName` option.\n\nTo determine the relative path of the modules the `srcPrefixes` option is \nexamined and any folder found on it is removed from the path of the modules \nbeing processed, giving the relative package name. \n\nFor example, given a `srcPrefixes` of \n`[\"src/main/resources/META-INF/resources\"]` if the module under \n`src/main/resources/META-INF/resources/lib/index.js` is processed, its relative \npath is computed to `lib/index.js`.\n\nThe default value of the `srcPrefixes` option is \n`[\"src/main/resources/META-INF/resources\"]`."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/babel-plugin-name-amd-modules/-/babel-plugin-name-amd-modules-2.7.1.tgz#91dde1c96f0de9f6b7f1eb093cada56902e93ecd",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/babel-plugin-name-amd-modules/-/babel-plugin-name-amd-modules-2.7.1.tgz",
    "hash": "91dde1c96f0de9f6b7f1eb093cada56902e93ecd",
    "integrity": "sha512-lWeYGQciZHzMVEXvbciSS+2XqBsOg6Tszpna9KnyqMXi+g/VwQb5/sWX+7lOlAstox+KaS4RgBj04Kh2cvtHIw==",
    "registry": "npm",
    "packageName": "babel-plugin-name-amd-modules"
  },
  "registry": "npm",
  "hash": "91dde1c96f0de9f6b7f1eb093cada56902e93ecd"
}