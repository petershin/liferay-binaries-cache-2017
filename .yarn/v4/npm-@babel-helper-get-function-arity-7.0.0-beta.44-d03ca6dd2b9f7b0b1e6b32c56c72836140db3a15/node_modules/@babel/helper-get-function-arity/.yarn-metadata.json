{
  "manifest": {
    "name": "@babel/helper-get-function-arity",
    "version": "7.0.0-beta.44",
    "description": "Helper function to get function arity",
    "repository": {
      "type": "git",
      "url": "https://github.com/babel/babel/tree/master/packages/babel-helper-get-function-arity"
    },
    "license": "MIT",
    "main": "lib/index.js",
    "dependencies": {
      "@babel/types": "7.0.0-beta.44"
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-@babel-helper-get-function-arity-7.0.0-beta.44-d03ca6dd2b9f7b0b1e6b32c56c72836140db3a15\\node_modules\\@babel\\helper-get-function-arity\\package.json",
    "readmeFilename": "README.md",
    "readme": "# @babel/helper-get-function-arity\n\nFunction that returns the number of arguments that a function takes.\n* Examples of what is considered an argument can be found at [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length)\n\n## Usage\n\n```javascript\nimport getFunctionArity from \"@babel/helper-get-function-arity\";\n\nfunction wrap(state, method, id, scope) {\n  // ...\n  if (!t.isFunction(method)) {\n    return false;\n  }\n\n  const argumentsLength = getFunctionArity(method);\n\n  // ...\n}\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@babel/helper-get-function-arity/-/helper-get-function-arity-7.0.0-beta.44.tgz#d03ca6dd2b9f7b0b1e6b32c56c72836140db3a15",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@babel/helper-get-function-arity/-/helper-get-function-arity-7.0.0-beta.44.tgz",
    "hash": "d03ca6dd2b9f7b0b1e6b32c56c72836140db3a15",
    "integrity": "sha512-w0YjWVwrM2HwP6/H3sEgrSQdkCaxppqFeJtAnB23pRiJB5E/O9Yp7JAAeWBl+gGEgmBFinnTyOv2RN7rcSmMiw==",
    "registry": "npm",
    "packageName": "@babel/helper-get-function-arity"
  },
  "registry": "npm",
  "hash": "d03ca6dd2b9f7b0b1e6b32c56c72836140db3a15"
}