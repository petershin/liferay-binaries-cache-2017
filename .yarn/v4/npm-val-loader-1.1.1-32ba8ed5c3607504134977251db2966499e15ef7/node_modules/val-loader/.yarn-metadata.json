{
  "manifest": {
    "name": "val-loader",
    "version": "1.1.1",
    "description": "val loader module for webpack",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/webpack-contrib/val-loader.git"
    },
    "author": {
      "name": "Tobias Koppers @sokra"
    },
    "homepage": "https://github.com/webpack-contrib/val-loader",
    "bugs": {
      "url": "https://github.com/webpack-contrib/val-loader/issues"
    },
    "main": "dist/cjs.js",
    "engines": {
      "node": ">= 6.9.0 || >= 8.9.0"
    },
    "scripts": {
      "start": "npm run build -- -w",
      "build": "cross-env NODE_ENV=production babel src -d dist --ignore 'src/**/*.test.js' --copy-files",
      "clean": "del-cli dist",
      "commitlint": "commitlint",
      "commitmsg": "commitlint -e $GIT_PARAMS",
      "lint": "eslint --cache src test",
      "ci:lint:commits": "commitlint --from=${CIRCLE_BRANCH} --to=${CIRCLE_SHA1}",
      "lint-staged": "lint-staged",
      "prebuild": "npm run clean",
      "prepublish": "npm run build",
      "release": "standard-version",
      "release:ci": "conventional-github-releaser -p angular",
      "release:validate": "commitlint --from=$(git describe --tags --abbrev=0) --to=$(git rev-parse HEAD)",
      "security": "nsp check",
      "test": "jest",
      "test:watch": "jest --watch",
      "test:coverage": "jest --collectCoverageFrom='src/**/*.js' --coverage",
      "ci:lint": "npm run lint && npm run security",
      "ci:test": "npm run test -- --runInBand",
      "ci:coverage": "npm run test:coverage -- --runInBand",
      "defaults": "webpack-defaults",
      "webpack-defaults": "webpack-defaults"
    },
    "files": [
      "dist"
    ],
    "keywords": [
      "webpack"
    ],
    "peerDependencies": {
      "webpack": "^2.0.0 || ^3.0.0 || ^4.0.0"
    },
    "dependencies": {
      "loader-utils": "^1.0.0",
      "schema-utils": "^0.4.5"
    },
    "devDependencies": {
      "@commitlint/cli": "^6.1.3",
      "@commitlint/config-angular": "^6.1.3",
      "@webpack-contrib/eslint-config-webpack": "^2.0.4",
      "babel-cli": "^6.0.0",
      "babel-jest": "^20.0.0",
      "babel-plugin-transform-object-rest-spread": "^6.0.0",
      "babel-polyfill": "^6.0.0",
      "babel-preset-env": "^1.0.0",
      "conventional-github-releaser": "^2.0.2",
      "cross-env": "^5.0.0",
      "del": "^3.0.0",
      "del-cli": "^1.0.0",
      "eslint": "^4.0.0",
      "eslint-config-webpack": "^1.0.0",
      "eslint-plugin-import": "^2.0.0",
      "eslint-plugin-prettier": "^2.6.0",
      "husky": "^0.14.3",
      "inspect-loader": "^1.0.0",
      "jest": "^20.0.0",
      "lint-staged": "^4.3.0",
      "memory-fs": "^0.4.1",
      "nsp": "^3.2.1",
      "pre-commit": "^1.0.0",
      "prettier": "^1.11.1",
      "standard-version": "^4.0.0",
      "webpack": "^3.11.0",
      "webpack-defaults": "^2.1.4"
    },
    "pre-commit": "lint-staged",
    "lint-staged": {
      "*.js": [
        "eslint --fix",
        "git add"
      ]
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-val-loader-1.1.1-32ba8ed5c3607504134977251db2966499e15ef7\\node_modules\\val-loader\\package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![chat][chat]][chat-url]\n\n# val-loader\n\nA webpack loader which executes a given module, and returns the result of the\nexecution at build-time, when the module is required in the bundle. In this way,\nthe loader changes a module from code to a result.\n\nAnother way to view `val-loader`, is that it allows a user a way to make their\nown custom loader logic, without having to write a custom loader.\n\n## Requirements\n\nThis module requires a minimum of Node v6.9.0 and Webpack v4.0.0.\n\n## Getting Started\n\nTo begin, you'll need to install `val-loader`:\n\n```console\n$ npm install val-loader --save-dev\n```\n\nThen add the loader to your `webpack` config. For example:\n\n```js\n// target-file.js\nmodule.exports = () => {\n  return { code: 'module.exports = 42;' }\n};\n```\n\n**webpack.config.js**\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /target-file.js$/,\n        use: [\n          {\n            loader: `val-loader`\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n```js\n// src/entry.js\nconst answer = require('test-file');\n```\n\nAnd run `webpack` via your preferred method.\n\n## Return Object Properties\n\nTargeted modules of this loader must export either a `Function` or `Promise`\nthat returns an object containing a `code` property at a minimum, but can\ncontain any number of additional properties.\n\n### `code`\n\nType: `String|Buffer`\nDefault: `undefined`\n_Required_\n\nCode passed along to webpack or the next loader that will replace the module.\n\n### `sourceMap`\n\nType: `Object`\nDefault: `undefined`\n\nA source map passed along to webpack or the next loader.\n\n### `ast`\n\nType: `Array[Object]`\nDefault: `undefined`\n\nAn [Abstract Syntax Tree](https://en.wikipedia.org/wiki/Abstract_syntax_tree)\nthat will be passed to the next loader. Useful to speed up the build time if the\nnext loader uses the same AST.\n\n### `dependencies`\n\nType: `Array[String]`\nDefault: `[]`\n\nAn array of absolute, native paths to file dependencies that should be watched\nby webpack for changes.\n\n### `contextDependencies`\n\nType: `Array[String]`\nDefault: `[]`\n\nAn array of absolute, native paths to directory dependencies that should be\nwatched by webpack for changes.\n\n### `cacheable`\n\nType: `Boolean`\nDefault: `false`\n\nIf `true`, specifies that the code can be re-used in watch mode if none of the\n`dependencies` have changed.\n\n## Examples\n\nIn this example the loader is configured to operator on a file name of\n`years-in-ms.js`, execute the code, and store the result in the bundle as the\nresult of the execution. This example passes `years` as an `option`, which\ncorresponds to the `years` parameter in the target module exported function:\n\n```js\n// years-in-ms.js\nmodule.exports = function yearsInMs({ years }) {\n  const value = years * 365 * 24 * 60 * 60 * 1000;\n  // NOTE: this return value will replace the module in the bundle\n  return { code: 'module.exports = ' + value };\n}\n```\n\n```js\n// webpack.config.js\nmodule.exports = {\n  ...\n  module: {\n    rules: [\n      {\n        test: require.resolve('src/years-in-ms.js'),\n        use: [\n          {\n            loader: 'val-loader',\n            options: {\n              years: 10\n            }\n          }\n        ]\n      }\n    ]\n  }\n};\n```\n\nIn the bundle, requiring the module then returns:\n\n```js\n// ... bundle code ...\n\n  const tenYearsMs = require('years-in-ms'); // 315360000000\n\n// ... bundle code ...\n```\n\nrequire(\"val-loader!tenyearsinms\") == 315360000000\n\n## License\n\n#### [MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/val-loader.svg\n[npm-url]: https://npmjs.com/package/val-loader\n\n[node]: https://img.shields.io/node/v/val-loader.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/webpack-contrib/val-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/val-loader\n\n[tests]: \thttps://img.shields.io/circleci/project/github/webpack-contrib/val-loader.svg\n[tests-url]: https://circleci.com/gh/webpack-contrib/val-loader\n\n[cover]: https://codecov.io/gh/webpack-contrib/val-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/val-loader\n\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack",
    "licenseText": "Copyright JS Foundation and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/val-loader/-/val-loader-1.1.1.tgz#32ba8ed5c3607504134977251db2966499e15ef7",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/val-loader/-/val-loader-1.1.1.tgz",
    "hash": "32ba8ed5c3607504134977251db2966499e15ef7",
    "integrity": "sha512-JLqLXJWCVLXTxbUeHhLpWkgl3+X3U8Bl0vY7rTFZgFSbLJaEtAxuD2ixy/cM8w/gzC7sS3NE5IDSzClDt332sw==",
    "registry": "npm",
    "packageName": "val-loader"
  },
  "registry": "npm",
  "hash": "32ba8ed5c3607504134977251db2966499e15ef7"
}