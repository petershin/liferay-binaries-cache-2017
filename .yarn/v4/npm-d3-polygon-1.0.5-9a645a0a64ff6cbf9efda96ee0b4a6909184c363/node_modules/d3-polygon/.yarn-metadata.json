{
  "manifest": {
    "name": "d3-polygon",
    "version": "1.0.5",
    "description": "Operations for two-dimensional polygons.",
    "keywords": [
      "d3",
      "d3-module",
      "polygon",
      "hull",
      "geometry",
      "graphics"
    ],
    "homepage": "https://d3js.org/d3-polygon/",
    "license": "BSD-3-Clause",
    "author": {
      "name": "Mike Bostock",
      "url": "http://bost.ocks.org/mike"
    },
    "main": "dist/d3-polygon.js",
    "unpkg": "dist/d3-polygon.min.js",
    "jsdelivr": "dist/d3-polygon.min.js",
    "module": "src/index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/d3/d3-polygon.git"
    },
    "scripts": {
      "pretest": "rollup -c",
      "test": "tape 'test/**/*-test.js' && eslint src test",
      "prepublishOnly": "rm -rf dist && yarn test",
      "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../${npm_package_name}/dist/${npm_package_name}.js ${npm_package_name}.v${npm_package_version%%.*}.js && cp ../${npm_package_name}/dist/${npm_package_name}.min.js ${npm_package_name}.v${npm_package_version%%.*}.min.js && git add ${npm_package_name}.v${npm_package_version%%.*}.js ${npm_package_name}.v${npm_package_version%%.*}.min.js && git commit -m \"${npm_package_name} ${npm_package_version}\" && git push && cd - && zip -j dist/${npm_package_name}.zip -- LICENSE README.md dist/${npm_package_name}.js dist/${npm_package_name}.min.js"
    },
    "devDependencies": {
      "eslint": "5",
      "rollup": "0.64",
      "rollup-plugin-terser": "1",
      "tape": "4"
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-d3-polygon-1.0.5-9a645a0a64ff6cbf9efda96ee0b4a6909184c363\\node_modules\\d3-polygon\\package.json",
    "readmeFilename": "README.md",
    "readme": "# d3-polygon\n\nThis module provides a few basic geometric operations for two-dimensional polygons. Each polygon is represented as an array of two-element arrays [​[<i>x1</i>, <i>y1</i>], [<i>x2</i>, <i>y2</i>], …], and may either be closed (wherein the first and last point are the same) or open (wherein they are not). Typically polygons are in counterclockwise order, assuming a coordinate system where the origin ⟨0,0⟩ is in the top-left corner.\n\n## Installing\n\nIf you use NPM, `npm install d3-polygon`. Otherwise, download the [latest release](https://github.com/d3/d3-polygon/releases/latest). You can also load directly from [d3js.org](https://d3js.org), either as a [standalone library](https://d3js.org/d3-polygon.v1.min.js) or as part of [D3 4.0](https://github.com/d3/d3). AMD, CommonJS, and vanilla environments are supported. In vanilla, a `d3` global is exported:\n\n```html\n<script src=\"https://d3js.org/d3-polygon.v1.min.js\"></script>\n<script>\n\nvar hull = d3.polygonHull(points);\n\n</script>\n```\n\n[Try d3-polygon in your browser.](https://tonicdev.com/npm/d3-polygon)\n\n## API Reference\n\n<a href=\"#polygonArea\" name=\"polygonArea\">#</a> d3.<b>polygonArea</b>(<i>polygon</i>) [<>](https://github.com/d3/d3-polygon/blob/master/src/area.js#L1 \"Source Code\")\n\nReturns the signed area of the specified *polygon*. If the vertices of the polygon are in counterclockwise order (assuming a coordinate system where the origin ⟨0,0⟩ is in the top-left corner), the returned area is positive; otherwise it is negative, or zero.\n\n<a href=\"#polygonCentroid\" name=\"polygonCentroid\">#</a> d3.<b>polygonCentroid</b>(<i>polygon</i>) [<>](https://github.com/d3/d3-polygon/blob/master/src/centroid.js#L1 \"Source Code\")\n\nReturns the [centroid](https://en.wikipedia.org/wiki/Centroid) of the specified *polygon*.\n\n<a href=\"#polygonHull\" name=\"polygonHull\">#</a> d3.<b>polygonHull</b>(<i>points</i>) [<>](https://github.com/d3/d3-polygon/blob/master/src/hull.js#L23 \"Source Code\")\n\n<a href=\"http://bl.ocks.org/mbostock/6f14f7b7f267a85f7cdc\"><img src=\"https://raw.githubusercontent.com/d3/d3-polygon/master/img/hull.png\" width=\"250\" height=\"250\"></a>\n\nReturns the [convex hull](https://en.wikipedia.org/wiki/Convex_hull) of the specified *points* using [Andrew’s monotone chain algorithm](http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain). The returned hull is represented as an array containing a subset of the input *points* arranged in counterclockwise order. Returns null if *points* has fewer than three elements.\n\n<a href=\"#polygonContains\" name=\"polygonContains\">#</a> d3.<b>polygonContains</b>(<i>polygon</i>, <i>point</i>) [<>](https://github.com/d3/d3-polygon/blob/master/src/contains.js#L1 \"Source Code\")\n\nReturns true if and only if the specified *point* is [inside the specified *polygon*](https://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html).\n\n<a href=\"#polygonLength\" name=\"polygonLength\">#</a> d3.<b>polygonLength</b>(<i>polygon</i>) [<>](https://github.com/d3/d3-polygon/blob/master/src/length.js#L1 \"Source Code\")\n\nReturns the length of the perimeter of the specified *polygon*.\n",
    "licenseText": "Copyright 2010-2016 Mike Bostock\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the author nor the names of contributors may be used to\n  endorse or promote products derived from this software without specific prior\n  written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/d3-polygon/-/d3-polygon-1.0.5.tgz#9a645a0a64ff6cbf9efda96ee0b4a6909184c363",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/d3-polygon/-/d3-polygon-1.0.5.tgz",
    "hash": "9a645a0a64ff6cbf9efda96ee0b4a6909184c363",
    "integrity": "sha512-RHhh1ZUJZfhgoqzWWuRhzQJvO7LavchhitSTHGu9oj6uuLFzYZVeBzaWTQ2qSO6bz2w55RMoOCf0MsLCDB6e0w==",
    "registry": "npm",
    "packageName": "d3-polygon"
  },
  "registry": "npm",
  "hash": "9a645a0a64ff6cbf9efda96ee0b4a6909184c363"
}