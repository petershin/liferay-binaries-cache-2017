{
  "manifest": {
    "name": "gulp-postcss",
    "nyc": {
      "lines": 100,
      "statements": 100,
      "functions": 100,
      "branches": 100,
      "reporter": [
        "lcov",
        "text"
      ],
      "cache": true,
      "all": true,
      "check-coverage": true
    },
    "version": "8.0.0",
    "description": "PostCSS gulp plugin",
    "main": "index.js",
    "scripts": {
      "coveralls": "coveralls < coverage/lcov.info",
      "pretest": "eslint *.js",
      "test": "nyc mocha test.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/postcss/gulp-postcss.git"
    },
    "keywords": [
      "gulpplugin",
      "postcss",
      "postcss-runner",
      "css"
    ],
    "author": {
      "name": "Andrey Kuzmin",
      "email": "unsoundscapes@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/postcss/gulp-postcss/issues"
    },
    "homepage": "https://github.com/postcss/gulp-postcss",
    "dependencies": {
      "fancy-log": "^1.3.2",
      "plugin-error": "^1.0.1",
      "postcss": "^7.0.2",
      "postcss-load-config": "^2.0.0",
      "vinyl-sourcemaps-apply": "^0.2.1"
    },
    "devDependencies": {
      "coveralls": "^3.0.2",
      "eslint": "^5.3.0",
      "gulp-sourcemaps": "^2.6.0",
      "mocha": "^5.2.0",
      "nyc": "^12.0.2",
      "proxyquire": "^2.0.1",
      "sinon": "^6.1.4",
      "vinyl": "^2.2.0"
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-gulp-postcss-8.0.0-8d3772cd4d27bca55ec8cb4c8e576e3bde4dc550\\node_modules\\gulp-postcss\\package.json",
    "readmeFilename": "README.md",
    "readme": "# gulp-postcss\n\n[![Build Status](https://img.shields.io/travis/postcss/gulp-postcss.png)](https://travis-ci.org/postcss/gulp-postcss)\n[![Coverage Status](https://img.shields.io/coveralls/postcss/gulp-postcss.png)](https://coveralls.io/r/postcss/gulp-postcss)\n\n[PostCSS](https://github.com/postcss/postcss) gulp plugin to pipe CSS through\nseveral plugins, but parse CSS only once.\n\n## Install\n\n    $ npm install --save-dev gulp-postcss\n\nInstall required [postcss plugins](https://www.npmjs.com/browse/keyword/postcss-plugin) separately. E.g. for autoprefixer, you need to install [autoprefixer](https://github.com/postcss/autoprefixer) package.\n\n## Basic usage\n\nThe configuration is loaded automatically from `postcss.config.js`\nas [described here](https://www.npmjs.com/package/postcss-load-config),\nso you don't have to specify any options.\n\n```js\nvar postcss = require('gulp-postcss');\nvar gulp = require('gulp');\n\ngulp.task('css', function () {\n    return gulp.src('./src/*.css')\n        .pipe(postcss())\n        .pipe(gulp.dest('./dest'));\n});\n```\n\n## Passing plugins directly\n\n```js\nvar postcss = require('gulp-postcss');\nvar gulp = require('gulp');\nvar autoprefixer = require('autoprefixer');\nvar cssnano = require('cssnano');\n\ngulp.task('css', function () {\n    var plugins = [\n        autoprefixer({browsers: ['last 1 version']}),\n        cssnano()\n    ];\n    return gulp.src('./src/*.css')\n        .pipe(postcss(plugins))\n        .pipe(gulp.dest('./dest'));\n});\n```\n\n## Passing additional options to PostCSS\n\nThe second optional argument to gulp-postcss is passed to PostCSS.\n\nThis, for instance, may be used to enable custom parser:\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\nvar nested = require('postcss-nested');\nvar sugarss = require('sugarss');\n\ngulp.task('default', function () {\n    var plugins = [nested];\n    return gulp.src('in.sss')\n        .pipe(postcss(plugins, { parser: sugarss }))\n        .pipe(gulp.dest('out'));\n});\n```\n\n## Using a custom processor\n\n```js\nvar postcss = require('gulp-postcss');\nvar cssnext = require('postcss-cssnext');\nvar opacity = function (css, opts) {\n    css.eachDecl(function(decl) {\n        if (decl.prop === 'opacity') {\n            decl.parent.insertAfter(decl, {\n                prop: '-ms-filter',\n                value: '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + (parseFloat(decl.value) * 100) + ')\"'\n            });\n        }\n    });\n};\n\ngulp.task('css', function () {\n    var plugins = [\n        cssnext({browsers: ['last 1 version']}),\n        opacity\n    ];\n    return gulp.src('./src/*.css')\n        .pipe(postcss(plugins))\n        .pipe(gulp.dest('./dest'));\n});\n```\n\n## Source map support\n\nSource map is disabled by default, to extract map use together\nwith [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps).\n\n```js\nreturn gulp.src('./src/*.css')\n    .pipe(sourcemaps.init())\n    .pipe(postcss(plugins))\n    .pipe(sourcemaps.write('.'))\n    .pipe(gulp.dest('./dest'));\n```\n\n## Advanced usage\n\nIf you want to configure postcss on per-file-basis, you can pass a callback\nthat receives [vinyl file object](https://github.com/gulpjs/vinyl) and returns\n`{ plugins: plugins, options: options }`. For example, when you need to\nparse different extensions differntly:\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\n\ngulp.task('css', function () {\n    function callback(file) {\n        return {\n            plugins: [\n                require('postcss-import')({ root: file.dirname }),\n                require('postcss-modules')\n            ],\n            options: {\n                parser: file.extname === '.sss' ? require('sugarss') : false\n            }\n        }\n    }\n    return gulp.src('./src/*.css')\n        .pipe(postcss(callback))\n        .pipe(gulp.dest('./dest'));\n});\n```\n\nThe same result may be achieved with\n[`postcss-load-config`](https://www.npmjs.com/package/postcss-load-config),\nbecause it receives `ctx` with the context options and the vinyl file.\n\n```js\nvar gulp = require('gulp');\nvar postcss = require('gulp-postcss');\n\ngulp.task('css', function () {\n    var contextOptions = { modules: true };\n    return gulp.src('./src/*.css')\n        .pipe(postcss(contextOptions))\n        .pipe(gulp.dest('./dest'));\n});\n```\n\n```js\nmodule.exports = function (ctx) {\n    var file = ctx.file;\n    var options = ctx.options;\n    return {\n        parser: file.extname === '.sss' ? : 'sugarss' : false,\n        plugins: {\n           'postcss-import': { root: file.dirname }\n           'postcss-modules': options.modules ? {} : false\n        }\n    }\n})\n```\n\n## Changelog\n\n* 8.0.0\n  * Bump PostCSS to 7.0\n  * Drop Node 4 support\n\n* 7.0.1\n  * Drop dependency on gulp-util\n\n* 7.0.0\n  * Bump PostCSS to 6.0\n  * Smaller module size\n  * Use eslint instead of jshint\n\n* 6.4.0\n  * Add more details to `PluginError` object\n\n* 6.3.0\n  * Integrated with postcss-load-config\n  * Added a callback to configure postcss on per-file-basis\n  * Dropped node 0.10 support\n\n* 6.2.0\n  * Fix syntax error message for PostCSS 5.2 compatibility\n\n* 6.1.1\n  * Fixed the error output\n\n* 6.1.0\n  * Support for `null` files\n  * Updated dependencies\n\n* 6.0.1\n  * Added an example and a test to pass options to PostCSS (e.g. `syntax` option)\n  * Updated vinyl-sourcemaps-apply to 0.2.0\n\n* 6.0.0\n  * Updated PostCSS to version 5.0.0\n\n* 5.1.10\n  * Use autoprefixer in README\n\n* 5.1.9\n  * Prevent unhandled exception of the following pipes from being suppressed by Promise\n\n* 5.1.8\n  * Prevent streamâ€™s unhandled exception from being suppressed by Promise\n\n* 5.1.7\n  * Updated direct dependencies\n\n* 5.1.6\n  * Updated `CssSyntaxError` check\n\n* 5.1.4\n  * Simplified error handling\n  * Simplified postcss execution with object plugins\n\n* 5.1.3 Updated travis banner\n\n* 5.1.2 Transferred repo into postcss org on github\n\n* 5.1.1\n  * Allow override of `to` option\n\n* 5.1.0 PostCSS Runner Guidelines\n  * Set `from` and `to` processing options\n  * Don't output js stack trace for `CssSyntaxError`\n  * Display `result.warnings()` content\n\n* 5.0.1\n  * Fix to support object plugins\n\n* 5.0.0\n  * Use async API\n\n* 4.0.3\n  * Fixed bug with relative source map\n\n* 4.0.2\n  * Made PostCSS a simple dependency, because peer dependency is deprecated\n\n* 4.0.1\n  * Made PostCSS 4.x a peer dependency\n\n* 4.0.0\n  * Updated PostCSS to 4.0\n\n* 3.0.0\n  * Updated PostCSS to 3.0 and fixed tests\n\n* 2.0.1\n  * Added Changelog\n  * Added example for a custom processor in README\n\n* 2.0.0\n  * Disable source map by default\n  * Test source map\n  * Added Travis support\n  * Use autoprefixer-core in README\n\n* 1.0.2\n  * Improved README\n\n* 1.0.1\n  * Don't add source map comment if used with gulp-sourcemaps\n\n* 1.0.0\n  * Initial release\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014 Andrey Kuzmin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/gulp-postcss/-/gulp-postcss-8.0.0.tgz#8d3772cd4d27bca55ec8cb4c8e576e3bde4dc550",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/gulp-postcss/-/gulp-postcss-8.0.0.tgz",
    "hash": "8d3772cd4d27bca55ec8cb4c8e576e3bde4dc550",
    "integrity": "sha512-Wtl6vH7a+8IS/fU5W9IbOpcaLqKxd5L1DUOzaPmlnCbX1CrG0aWdwVnC3Spn8th0m8D59YbysV5zPUe1n/GJYg==",
    "registry": "npm",
    "packageName": "gulp-postcss"
  },
  "registry": "npm",
  "hash": "8d3772cd4d27bca55ec8cb4c8e576e3bde4dc550"
}