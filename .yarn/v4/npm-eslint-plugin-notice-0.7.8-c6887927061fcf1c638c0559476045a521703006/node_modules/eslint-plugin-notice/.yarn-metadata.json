{
  "manifest": {
    "name": "eslint-plugin-notice",
    "version": "0.7.8",
    "description": "An eslint rule that checks the top of files and --fix them too!",
    "main": "index.js",
    "scripts": {
      "test": "node tests/lib/rules/notice.js && node tests/test-utils.js"
    },
    "keywords": [
      "eslint",
      "plugin",
      "notice",
      "copyright",
      "header",
      "lint",
      "eslintplugin"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/nickdeis/eslint-plugin-notice"
    },
    "author": {
      "name": "nickdeis"
    },
    "license": "MIT",
    "devDependencies": {
      "eslint": "^4.10.0"
    },
    "dependencies": {
      "find-root": "^1.1.0",
      "lodash": ">=2.4.0",
      "metric-lcs": "^0.1.2"
    },
    "peerDependencies": {
      "eslint": ">=3.0.0"
    },
    "_registry": "npm",
    "_loc": "..\\..\\liferay-binaries-cache-2017\\.yarn\\v4\\npm-eslint-plugin-notice-0.7.8-c6887927061fcf1c638c0559476045a521703006\\node_modules\\eslint-plugin-notice\\package.json",
    "readmeFilename": "README.md",
    "readme": "# eslint-plugin-notice\n\nAn eslint rule that checks the top of files and `--fix` them too!\n\n## Usage\n\n`npm i eslint-plugin-notice`\n\nThrow an error when a file doesn't have copyright notice\n```json\n{\n    \"plugins\":[\"notice\"],\n    \"rules\":{\n        \"notice/notice\":[\"error\",{\"mustMatch\":\"Copyright \\\\(c\\\\) [0-9]{0,4}, Nick Deis\"}]\n    }\n}\n```\n\nAdd a template to `--fix` it\n```json\n{\n    \"notice/notice\":[\"error\",\n        {\n        \"mustMatch\":\"Copyright \\\\(c\\\\) [0-9]{0,4}, Nick Deis\",\n        \"template\":\"/** Copyright (c) <%= YEAR %>, Nick Deis **/\"\n        }\n    ]\n}\n```\n\nor use a file\n\n*config/copyright.js*\n```js\n/**\n * Copyright (c) <%= YEAR %>, Nick Deis\n */\n```\n```json\n{\n    \"notice/notice\":[\"error\",\n        {\n        \"mustMatch\":\"Copyright \\\\(c\\\\) [0-9]{0,4}, Nick Deis\",\n        \"templateFile\":\"config/copyright.js\"\n        }\n    ]\n}\n```\n\nor just use your template, eslint-plugin-notice will reverse into a pattern for `mustMatch`\n\n```json\n{\n    \"notice/notice\":[\"error\",\n        {\n        \"templateFile\":\"config/copyright.js\"\n        }\n    ]\n}\n```\n\nWant a more expressive template? Add `templateVars` and `varRegexps`\n*config/copyright.js*\n```js\n/**\n * Copyright (c) <%= YEAR %>, <%= NAME %>\n */\n```\n```js\n{\n    \"notice/notice\":[\"error\",\n        {\n        templateFile:\"config/copyright.js\",\n        //YEAR will still be added unless you add your own value\n        templateVars:{NAME:\"Nick Deis\"},\n        //The regexp for YEAR is /20\\d{2}/ and is automatically added\n        varRegexps:{NAME:/(Nick|Nicholas) Deis/}\n        }\n    ]\n}\n```\n\n\n## Options\n\n|Option|Description|Default/Required/Optional|Type|\n|------|-----------|----------------|----|\n|mustMatch|A pattern that must be present in the notice|**Required** unless `template` is set|RegExp/string|\n|template|A lodash template that will be used to fix files that do not match `mustMatch` or are less than `nonMatchingTolerance`|**Optional** unless `mustMatch` is not set|string|\n|templateFile|`template` will override this setting. A file which contains the `template`|**Optional**|string|\n|chars|The number of characters to check for the `mustMatch` pattern|`1000`|number|\n|templateVars|The variables to be used with the lodash template, always contains the variable YEAR|`{YEAR:new Date().getFullYear()}`|object|\n|[onNonMatchingHeader](#onnonmatchingheader)|Action that should be taken when there is a header comment, but it does not match `mustMatch` or is less than `nonMatchingTolerance`|`\"prepend\"`|string|\n|nonMatchingTolerance|Optional fallback for `mustMatch`. Compares a non-matching header comment (if it exists) to the resolved template using [Metric Longest Common Subsequence](http://heim.ifi.uio.no/~danielry/StringMetric.pdf). `1` means the strings must be exactly the same, where anything less is varying degrees of dissimiliar. `.70` seems like a good choice|**Optional**|number between 0 and 1|\n|varRegexps|If `mustMatch` is not set and `template` is set, a regexp that will be replaced in the `template` to create a regexp for `mustMatch`|`{YEAR:/20\\d{2}/}`|object|\n|messages|Allows you to change the error messages. See [messages](#messages)|**Optional**|object|\n\n\n\n### onNonMatchingHeader\n\n* **prepend**: Prepends the fix template, if it exists, leaving the former header comment intact.\n* **replace**: Replaces the former header comment with the fix template if it exists\n* **report**: Does not apply fix, simply reports it based on the level assigned to the rule (\"error\" or \"warn\")\n\n### messages\n\nThe `messages` option allows you to change the default error messages. \nThere are three messages you can change by passing in an object with the pairs you wish to change. \nFor example, if you want to change the default message for when a header does not match `mustMatch`:\n\n```js\n{\n    \"notice/notice\":[\"error\",\n        {\n            \"mustMatch\":\"Apache License\",\n            \"templateFile\":\"config/apache.js\",\n            \"messages\":{\n                \"whenFailedToMatch\":\"Couldn't find 'Apache License', are you sure you added it?\"\n            }\n        }\n    ]\n}\n```\n\nThe three configurable messages are: \n\n* **whenFailedToMatch**: When the header fails to match the `mustMatch` pattern.\n* **reportAndSkip**: When using `\"onNonMatchingHeader\":\"report\"` and a non-matching notice is found.\n* **whenOutsideTolerance**: When you using `nonMatchingTolerance` to check for notice similarity and it fails to be similar enough. Passes in `similarity` as a template variable (eg `\"The similarity is {{ similarity }}\"`)\n\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Nick Deis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-plugin-notice/-/eslint-plugin-notice-0.7.8.tgz#c6887927061fcf1c638c0559476045a521703006",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-plugin-notice/-/eslint-plugin-notice-0.7.8.tgz",
    "hash": "c6887927061fcf1c638c0559476045a521703006",
    "integrity": "sha512-a18VwxiBp4TmXRVpx7T5D4ilHnMS1Gq/5OMUriCcJGHD72Cbji7qVk19DGOW9vBHnJJKeg0yU95a7/o8JQoMCw==",
    "registry": "npm",
    "packageName": "eslint-plugin-notice"
  },
  "registry": "npm",
  "hash": "c6887927061fcf1c638c0559476045a521703006"
}